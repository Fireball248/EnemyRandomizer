START =====================================================
Printing full hierarchy for scene: Fungus1_04_boss [Build index: 133]
Local scene index: 1
START =====================================================
Printing scene hierarchy for game object: Dreamer Scene 1
Dreamer Scene 1
 \--Component: Transform
 \--GameObject layer: 13
 \--GameObject tag: Untagged
 \--Transform Position: (0.0, 0.0, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (14.5, 63.9)
 \--BoxCollider2D Offset: (19.5, 17.2)
 \--BoxCollider2D Bounds-Min: (0.0, 0.0, 0.0)
 \--BoxCollider2D Bounds-Max: (0.0, 0.0, 0.0)
 \--BoxCollider2D isTrigger: True
 \--Component: PlayMakerFSM
 \--PFSM Name: Control
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Pause
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Init
 \----PFSM ---- Actions for state: Actions on Pause ::: NextFrameEvent
 \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
 \----PFSM StateName: Init
 \----PFSM ---- Transitions for state: Transition on ACTIVATE to state Inert
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
 \----PFSM ---- Actions for state: Actions on Init ::: PlayerDataBoolTest
 \----PFSM ---- Actions for state: Actions on Init ::: CreateObject
 \----PFSM ---- Actions for state: Actions on Init ::: SetFsmString
 \----PFSM ---- Actions for state: Actions on Init ::: CreateObject
 \----PFSM ---- Actions for state: Actions on Init ::: SetFsmString
 \----PFSM ---- Actions for state: Actions on Init ::: CreateObject
 \----PFSM ---- Actions for state: Actions on Init ::: SetFsmString
 \----PFSM ---- PlayerDataBoolTest (boolName) = dreamerScene1
 \----PFSM ---- PlayerDataBoolTest (bool.Value) = False
 \----PFSM ---- CreateObject (Name) = 
 \----PFSM ---- CreateObject (gameObject?.Name) = 
 \----PFSM ---- CreateObject (position) = (42.8, -0.5, 0.0)
 \----PFSM ---- CreateObject (position) = (0.0, 0.0, 0.0)
 \----PFSM ---- CreateObject (networkGroup) = 0
 \----PFSM ---- CreateObject (networkInstantiate) = False
 \----PFSM ---- CreateObject (spawnPoint) = None
 \----PFSM ---- CreateObject (storeObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetFsmString (Name) = 
 \----PFSM ---- SetFsmString (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmString (fsmName) = Control
 \----PFSM ---- SetFsmString (variableName) = Name
 \----PFSM ---- SetFsmString (setValue) = Hegemol
 \----PFSM ---- CreateObject (Name) = 
 \----PFSM ---- CreateObject (gameObject?.Name) = 
 \----PFSM ---- CreateObject (position) = (44.3, -2.9, 0.0)
 \----PFSM ---- CreateObject (position) = (0.0, 0.0, 0.0)
 \----PFSM ---- CreateObject (networkGroup) = 0
 \----PFSM ---- CreateObject (networkInstantiate) = False
 \----PFSM ---- CreateObject (spawnPoint) = None
 \----PFSM ---- CreateObject (storeObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetFsmString (Name) = 
 \----PFSM ---- SetFsmString (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmString (fsmName) = Control
 \----PFSM ---- SetFsmString (variableName) = Name
 \----PFSM ---- SetFsmString (setValue) = Lurien
 \----PFSM ---- CreateObject (Name) = 
 \----PFSM ---- CreateObject (gameObject?.Name) = 
 \----PFSM ---- CreateObject (position) = (39.9, 1.0, 0.0)
 \----PFSM ---- CreateObject (position) = (0.0, 0.0, 0.0)
 \----PFSM ---- CreateObject (networkGroup) = 0
 \----PFSM ---- CreateObject (networkInstantiate) = False
 \----PFSM ---- CreateObject (spawnPoint) = None
 \----PFSM ---- CreateObject (storeObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetFsmString (Name) = 
 \----PFSM ---- SetFsmString (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmString (fsmName) = Control
 \----PFSM ---- SetFsmString (variableName) = Name
 \----PFSM ---- SetFsmString (setValue) = Monomon
 \----PFSM StateName: Inert
 \----PFSM StateName: Idle
 \----PFSM ---- Transitions for state: Transition on ENTER to state Take Control
 \----PFSM ---- Actions for state: Actions on Idle ::: Trigger2dEvent
 \----PFSM StateName: Take Control
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Blast
 \----PFSM ---- Actions for state: Actions on Take Control ::: SetPlayerDataBool
 \----PFSM ---- Actions for state: Actions on Take Control ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Take Control ::: SendMessage
 \----PFSM ---- Actions for state: Actions on Take Control ::: SendMessage
 \----PFSM ---- Actions for state: Actions on Take Control ::: SendMessage
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Hero
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FSM CANCEL
 \----PFSM StateName: Blast
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Hero Fall
 \----PFSM ---- Actions for state: Actions on Blast ::: CreateObject
 \----PFSM ---- Actions for state: Actions on Blast ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Blast ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Blast ::: GetPosition
 \----PFSM ---- Actions for state: Actions on Blast ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Blast ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Blast ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Blast ::: SendMessage
 \----PFSM ---- Actions for state: Actions on Blast ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Blast ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Blast ::: SetFsmBool
 \----PFSM ---- CreateObject (Name) = 
 \----PFSM ---- CreateObject (gameObject?.Name) = 
 \----PFSM ---- CreateObject (position) = (0.0, 0.0, 0.0)
 \----PFSM ---- CreateObject (position) = (0.0, 0.0, 0.0)
 \----PFSM ---- CreateObject (networkGroup) = 0
 \----PFSM ---- CreateObject (networkInstantiate) = False
 \----PFSM ---- CreateObject (spawnPoint) = None
 \----PFSM ---- CreateObject (storeObject) = None
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0.85
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0.85
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = Knight
 \----PFSM ---- GetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = Init Blast
 \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Init Blast
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = BigShake
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Collect Magical Fall
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = Hero
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = -10
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- SetFsmBool (Name) = 
 \----PFSM ---- SetFsmBool (GameObject) = CameraParent
 \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmBool (fsmName) = CameraShake
 \----PFSM ---- SetFsmBool (variableName) = RumblingMed
 \----PFSM ---- SetFsmBool (setValue) = True
 \----PFSM StateName: Hero Fall
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Land
 \----PFSM ---- Actions for state: Actions on Hero Fall ::: GetPosition
 \----PFSM ---- Actions for state: Actions on Hero Fall ::: FloatCompare
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = Knight
 \----PFSM ---- GetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- FloatCompare (Name) = 
 \----PFSM ---- FloatCompare (float1) = 0
 \----PFSM ---- FloatCompare (float2) = 28.5
 \----PFSM ---- FloatCompare (greaterThan) = 
 \----PFSM ---- FloatCompare (lessThan) = FINISHED
 \----PFSM ---- FloatCompare (equal) = FINISHED
 \----PFSM StateName: Land
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Box Up
 \----PFSM ---- Actions for state: Actions on Land ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Land ::: Wait
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Dreamer Land
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 2
 \----PFSM StateName: Lurien Appear
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Monomon Appear
 \----PFSM ---- Actions for state: Actions on Lurien Appear ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Lurien Appear ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Lurien Appear ::: SetScale
 \----PFSM ---- Actions for state: Actions on Lurien Appear ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Lurien Appear ::: Wait
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 1
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Lurien
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FORM
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.5
 \----PFSM StateName: Box Up
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Convo 1
 \----PFSM ---- Actions for state: Actions on Box Up ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Box Up ::: Wait
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = DialogueManager
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = BOX UP DREAM
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.3
 \----PFSM StateName: Convo 1
 \----PFSM ---- Transitions for state: Transition on CONVO_FINISH to state Convo 2
 \----PFSM ---- Actions for state: Actions on Convo 1 ::: SetTextMeshProAlignment
 \----PFSM ---- Actions for state: Actions on Convo 1 ::: CallMethodProper
 \----PFSM StateName: Box Down
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Lurien Appear
 \----PFSM ---- Actions for state: Actions on Box Down ::: SetTextMeshProAlignment
 \----PFSM ---- Actions for state: Actions on Box Down ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Box Down ::: Wait
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = DialogueManager
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = BOX DOWN DREAM
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.8
 \----PFSM StateName: Monomon Appear
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Hegemol Appear
 \----PFSM ---- Actions for state: Actions on Monomon Appear ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Monomon Appear ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Monomon Appear ::: SetScale
 \----PFSM ---- Actions for state: Actions on Monomon Appear ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Monomon Appear ::: Wait
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 1
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Monomon
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FORM
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.5
 \----PFSM StateName: Hegemol Appear
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Casting
 \----PFSM ---- Actions for state: Actions on Hegemol Appear ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Hegemol Appear ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Hegemol Appear ::: SetScale
 \----PFSM ---- Actions for state: Actions on Hegemol Appear ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Hegemol Appear ::: Wait
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0.85
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0.85
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 1
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Hegemol
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FORM
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.5
 \----PFSM StateName: Casting
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Blast Down
 \----PFSM ---- Actions for state: Actions on Casting ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Casting ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Casting ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Casting ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Casting ::: SetFsmBool
 \----PFSM ---- Actions for state: Actions on Casting ::: SetFsmBool
 \----PFSM ---- Actions for state: Actions on Casting ::: Wait
 \----PFSM ---- Actions for state: Actions on Casting ::: SetFsmFloat
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Hegemol
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = CAST
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Lurien
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = CAST
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Monomon
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = CAST
 \----PFSM ---- SetFsmBool (Name) = 
 \----PFSM ---- SetFsmBool (GameObject) = CameraParent
 \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmBool (fsmName) = CameraShake
 \----PFSM ---- SetFsmBool (variableName) = RumblingMed
 \----PFSM ---- SetFsmBool (setValue) = False
 \----PFSM ---- SetFsmBool (Name) = 
 \----PFSM ---- SetFsmBool (GameObject) = CameraParent
 \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmBool (fsmName) = CameraShake
 \----PFSM ---- SetFsmBool (variableName) = RumblingBig
 \----PFSM ---- SetFsmBool (setValue) = True
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 1.5
 \----PFSM StateName: Fade Out
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Remove Dreamers
 \----PFSM ---- Actions for state: Actions on Fade Out ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Fade Out ::: Wait
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = HUD Blanker White
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FADE IN
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 2.5
 \----PFSM StateName: Fade In
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Get Up
 \----PFSM ---- Actions for state: Actions on Fade In ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Fade In ::: SetFsmFloat
 \----PFSM ---- Actions for state: Actions on Fade In ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Fade In ::: Wait
 \----PFSM ---- Actions for state: Actions on Fade In ::: PlayParticleEmitter
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = DREAM AREA DISABLE
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = HUD Blanker White
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FADE OUT
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 4.5
 \----PFSM StateName: Get Up
 \----PFSM ---- Transitions for state: Transition on FINISHED to state End
 \----PFSM ---- Actions for state: Actions on Get Up ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Prostrate Rise
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, Hero) = Knight
 \----PFSM StateName: End
 \----PFSM ---- Actions for state: Actions on End ::: SendMessage
 \----PFSM ---- Actions for state: Actions on End ::: SendMessage
 \----PFSM StateName: Remove Dreamers
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Fade In
 \----PFSM ---- Actions for state: Actions on Remove Dreamers ::: SetFsmBool
 \----PFSM ---- Actions for state: Actions on Remove Dreamers ::: DestroyObject
 \----PFSM ---- Actions for state: Actions on Remove Dreamers ::: DestroyObject
 \----PFSM ---- Actions for state: Actions on Remove Dreamers ::: DestroyObject
 \----PFSM ---- Actions for state: Actions on Remove Dreamers ::: Tk2dPlayAnimation
 \----PFSM ---- SetFsmBool (Name) = 
 \----PFSM ---- SetFsmBool (GameObject) = CameraParent
 \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmBool (fsmName) = CameraShake
 \----PFSM ---- SetFsmBool (variableName) = RumblingBig
 \----PFSM ---- SetFsmBool (setValue) = False
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Prostrate
 \----PFSM StateName: Convo 2
 \----PFSM ---- Transitions for state: Transition on CONVO_FINISH to state Convo 3
 \----PFSM ---- Actions for state: Actions on Convo 2 ::: CallMethodProper
 \----PFSM StateName: Convo 3
 \----PFSM ---- Transitions for state: Transition on CONVO_FINISH to state Convo 4
 \----PFSM ---- Actions for state: Actions on Convo 3 ::: CallMethodProper
 \----PFSM StateName: Convo 4
 \----PFSM ---- Transitions for state: Transition on CONVO_FINISH to state Box Down
 \----PFSM ---- Actions for state: Actions on Convo 4 ::: CallMethodProper
 \----PFSM StateName: Blast Down
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Blast Impact
 \----PFSM ---- Actions for state: Actions on Blast Down ::: FindChild
 \----PFSM ---- Actions for state: Actions on Blast Down ::: FindChild
 \----PFSM ---- Actions for state: Actions on Blast Down ::: FindChild
 \----PFSM ---- Actions for state: Actions on Blast Down ::: PlayParticleEmitter
 \----PFSM ---- Actions for state: Actions on Blast Down ::: Wait
 \----PFSM ---- Actions for state: Actions on Blast Down ::: AudioPlayerOneShotSingle
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.2
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
 \----PFSM StateName: Blast Impact
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Fade Out
 \----PFSM ---- Actions for state: Actions on Blast Impact ::: SpawnObjectFromGlobalPool
 \----PFSM ---- Actions for state: Actions on Blast Impact ::: PlayParticleEmitter
 \----PFSM ---- Actions for state: Actions on Blast Impact ::: Wait
 \----PFSM ---- Actions for state: Actions on Blast Impact ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Blast Impact ::: AudioPlayerOneShotSingle
 \----PFSM ---- SpawnObjectFromGlobalPool (Name) = 
 \----PFSM ---- SpawnObjectFromGlobalPool (gameObject?.Name) = 
 \----PFSM ---- SpawnObjectFromGlobalPool (position) = (0.0, 0.0, 0.0)
 \----PFSM ---- SpawnObjectFromGlobalPool (rotation) = (0.0, 0.0, 0.0)
 \----PFSM ---- SpawnObjectFromGlobalPool (spawnPoint) = Knight
 \----PFSM ---- SpawnObjectFromGlobalPool (storeObject) = None
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.25
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
 \--PFSM Active: True
 \--PFSM ActiveStateName: Idle
 \--Component: PlayMakerFixedUpdate
 \--Component: PlayMakerUnity2DProxy
Dreamer Scene 1\Init Blast
                 \--Component: Transform
                 \--GameObject layer: 11
                 \--GameObject tag: Untagged
                 \--Transform Position: (63.0, 14.3, -1.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (-3.0, 3.0, 1.0)
                 \--Component: MeshFilter
                 \--Component: MeshRenderer
                 \--Component: tk2dSprite
                 \--Component: tk2dSpriteAnimator
                 \--Component: PlayMakerFSM
                 \--PFSM Name: FSM
                 \--PFSM FsmDescription: 
                 \--PFSM StateNames
                 \----PFSM StateName: Wait
                 \----PFSM ---- Transitions for state: Transition on FINISHED to state Destroy
                 \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dWatchAnimationEvents
                 \----PFSM StateName: Destroy
                 \----PFSM ---- Actions for state: Actions on Destroy ::: DestroySelf
                 \----PFSM StateName: Pause
                 \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait
                 \----PFSM ---- Actions for state: Actions on Pause ::: NextFrameEvent
                 \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
                 \--PFSM Active: False
                 \--PFSM ActiveStateName: 
Dreamer Scene 1\Init Blast\Attack Pt
                            \--Component: Transform
                            \--GameObject layer: 16
                            \--GameObject tag: Untagged
                            \--Transform Position: (63.0, 14.3, -1.0)
                            \--Transform Rotation: (0.0, 0.0, 0.0)
                            \--Transform LocalScale: (-0.3, 0.3, 1.0)
                            \--Component: ParticleSystem
                            \--Component: ParticleSystemRenderer
Dreamer Scene 1\Init Blast\White Flash
                            \--Component: Transform
                            \--GameObject layer: 0
                            \--GameObject tag: Untagged
                            \--Transform Position: (63.0, 14.3, -0.9)
                            \--Transform Rotation: (0.0, 0.0, 0.0)
                            \--Transform LocalScale: (-3.9, 3.9, 11.6)
                            \--Component: SpriteRenderer
                            \--Component: PlayMakerFSM
                            \--PFSM Name: fade and destroy
                            \--PFSM FsmDescription: 
                            \--PFSM StateNames
                            \----PFSM StateName: Idle
                            \----PFSM ---- Transitions for state: Transition on FINISHED to state Destroy
                            \----PFSM ---- Actions for state: Actions on Idle ::: EaseColor
                            \----PFSM ---- Actions for state: Actions on Idle ::: SetMaterialColor
                            \----PFSM StateName: Destroy
                            \----PFSM ---- Actions for state: Actions on Destroy ::: DestroySelf
                            \----PFSM ---- Actions for state: Actions on Destroy ::: ActivateGameObject
                            \----PFSM ---- ActivateGameObject (Name) = 
                            \----PFSM ---- ActivateGameObject (GameObject) = None
                            \----PFSM ---- ActivateGameObject (OwnerOption) = UseOwner
                            \----PFSM ---- ActivateGameObject (activate) = False
                            \--PFSM Active: False
                            \--PFSM ActiveStateName: 
Dreamer Scene 1\Summon Pt
                 \--Component: Transform
                 \--GameObject layer: 16
                 \--GameObject tag: Untagged
                 \--Transform Position: (56.0, 7.3, 0.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (1.0, 1.0, 1.0)
                 \--Component: ParticleSystem
                 \--Component: ParticleSystemRenderer
                 \--Component: KeepWorldScalePositive
Dreamer Scene 1\Knight Lift
                 \--Component: Transform
                 \--GameObject layer: 13
                 \--GameObject tag: Untagged
                 \--Transform Position: (0.0, 0.0, 0.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (-1.0, 1.0, 1.0)
                 \--Component: MeshFilter
                 \--Component: MeshRenderer
                 \--Component: tk2dSprite
                 \--Component: tk2dSpriteAnimator
                 \--Component: PlayMakerFSM
                 \--PFSM Name: Lift
                 \--PFSM FsmDescription: 
                 \--PFSM StateNames
                 \----PFSM StateName: Tween
                 \----PFSM ---- Actions for state: Actions on Tween ::: iTweenMoveBy
                 \--PFSM Active: False
                 \--PFSM ActiveStateName: 
Dreamer Scene 1\Pt Blast 1
                 \--Component: Transform
                 \--GameObject layer: 16
                 \--GameObject tag: Untagged
                 \--Transform Position: (27.2, 45.4, 0.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (1.0, 1.0, 1.0)
                 \--Component: ParticleSystem
                 \--Component: ParticleSystemRenderer
Dreamer Scene 1\Pt Blast 2
                 \--Component: Transform
                 \--GameObject layer: 16
                 \--GameObject tag: Untagged
                 \--Transform Position: (27.1, 26.5, 0.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (1.0, 1.0, 1.0)
                 \--Component: ParticleSystem
                 \--Component: ParticleSystemRenderer
Dreamer Scene 1\Pt Aftermath
                 \--Component: Transform
                 \--GameObject layer: 16
                 \--GameObject tag: Untagged
                 \--Transform Position: (27.1, 26.8, 0.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (1.0, 1.0, 1.0)
                 \--Component: ParticleSystem
                 \--Component: ParticleSystemRenderer
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Hornet Saver
Hornet Saver
 \--Component: Transform
 \--GameObject layer: 8
 \--GameObject tag: Untagged
 \--Transform Position: (0.0, 0.0, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
Hornet Saver\Colliders
              \--Component: Transform
              \--GameObject layer: 8
              \--GameObject tag: Untagged
              \--Transform Position: (0.0, 0.0, 0.0)
              \--Transform Rotation: (0.0, 0.0, 0.0)
              \--Transform LocalScale: (1.0, 1.0, 1.0)
              \--Component: BoxCollider2D
              \--BoxCollider2D Size: (8.0, 20.0)
              \--BoxCollider2D Offset: (11.0, 35.0)
              \--BoxCollider2D Bounds-Min: (7.0, 25.0, 0.0)
              \--BoxCollider2D Bounds-Max: (15.0, 45.0, 0.0)
              \--BoxCollider2D isTrigger: False
              \--Component: BoxCollider2D
              \--BoxCollider2D Size: (8.0, 20.0)
              \--BoxCollider2D Offset: (42.0, 35.0)
              \--BoxCollider2D Bounds-Min: (38.0, 25.0, 0.0)
              \--BoxCollider2D Bounds-Max: (46.0, 45.0, 0.0)
              \--BoxCollider2D isTrigger: False
              \--Component: BoxCollider2D
              \--BoxCollider2D Size: (27.6, 20.0)
              \--BoxCollider2D Offset: (26.4, 17.0)
              \--BoxCollider2D Bounds-Min: (12.6, 7.0, 0.0)
              \--BoxCollider2D Bounds-Max: (40.2, 27.0, 0.0)
              \--BoxCollider2D isTrigger: False
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Music Region
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Dream Scene Activate
Dream Scene Activate
 \--Component: Transform
 \--GameObject layer: 13
 \--GameObject tag: Untagged
 \--Transform Position: (0.0, 0.0, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: PlayMakerFSM
 \--PFSM Name: Control
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Pause
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Check
 \----PFSM ---- Actions for state: Actions on Pause ::: NextFrameEvent
 \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
 \----PFSM StateName: Check
 \----PFSM ---- Transitions for state: Transition on INERT to state Inert
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Init
 \----PFSM ---- Actions for state: Actions on Check ::: PlayerDataBoolTest
 \----PFSM ---- Actions for state: Actions on Check ::: PlayerDataBoolTest
 \----PFSM ---- PlayerDataBoolTest (boolName) = dreamerScene1
 \----PFSM ---- PlayerDataBoolTest (bool.Value) = False
 \----PFSM ---- PlayerDataBoolTest (boolName) = hasDash
 \----PFSM ---- PlayerDataBoolTest (bool.Value) = False
 \----PFSM StateName: Inert
 \----PFSM StateName: Init
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
 \----PFSM ---- Actions for state: Actions on Init ::: FindGameObject
 \----PFSM ---- Actions for state: Actions on Init ::: FindGameObject
 \----PFSM ---- Actions for state: Actions on Init ::: FindGameObject
 \----PFSM StateName: Idle
 \----PFSM ---- Transitions for state: Transition on ENTER to state Activate
 \----PFSM ---- Actions for state: Actions on Idle ::: Trigger2dEvent
 \----PFSM StateName: Activate
 \----PFSM ---- Transitions for state: Transition on CANCEL to state Idle
 \----PFSM ---- Actions for state: Actions on Activate ::: PlayerDataBoolTest
 \----PFSM ---- Actions for state: Actions on Activate ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Activate ::: SetCollider
 \----PFSM ---- Actions for state: Actions on Activate ::: SendEventByName
 \----PFSM ---- PlayerDataBoolTest (boolName) = hasDash
 \----PFSM ---- PlayerDataBoolTest (bool.Value) = False
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hornet Saver
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- SetCollider (Name) = 
 \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = Dreamer Scene 1
 \----PFSM ---- SetCollider (active) = True
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Battle Gate A
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = BG OPEN
 \--PFSM Active: True
 \--PFSM ActiveStateName: Idle
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (13.4, 23.5)
 \--BoxCollider2D Offset: (37.0, 36.7)
 \--BoxCollider2D Bounds-Min: (30.2, 24.9, 0.0)
 \--BoxCollider2D Bounds-Max: (43.7, 48.4, 0.0)
 \--BoxCollider2D isTrigger: True
 \--Component: PlayMakerUnity2DProxy
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Cutscene Dreamer
Cutscene Dreamer
 \--Component: Transform
 \--GameObject layer: 0
 \--GameObject tag: Untagged
 \--Transform Position: (18.9, 34.3, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: PlayMakerFSM
 \--PFSM Name: Control
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Init
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Off
 \----PFSM ---- Actions for state: Actions on Init ::: FindChild
 \----PFSM ---- Actions for state: Actions on Init ::: BuildString
 \----PFSM ---- Actions for state: Actions on Init ::: BuildString
 \----PFSM StateName: Off
 \----PFSM ---- Actions for state: Actions on Off ::: SetSpriteRenderer
 \----PFSM ---- Actions for state: Actions on Off ::: StopParticleEmitter
 \----PFSM ---- Actions for state: Actions on Off ::: StopParticleEmitter
 \----PFSM ---- Actions for state: Actions on Off ::: StopParticleEmitter
 \----PFSM StateName: Orb
 \----PFSM ---- Actions for state: Actions on Orb ::: SetMeshRenderer
 \----PFSM ---- Actions for state: Actions on Orb ::: StopParticleEmitter
 \----PFSM ---- Actions for state: Actions on Orb ::: PlayParticleEmitter
 \----PFSM ---- Actions for state: Actions on Orb ::: PlayParticleEmitter
 \----PFSM ---- SetMeshRenderer (Name) = 
 \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Sprite
 \----PFSM ---- SetMeshRenderer (active) = False
 \----PFSM StateName: To Orb
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Orb
 \----PFSM ---- Actions for state: Actions on To Orb ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on To Orb ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on To Orb ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on To Orb ::: PlayParticleEmitter
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = AverageShake
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = White Flash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Blast
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM StateName: To Form
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Form
 \----PFSM ---- Actions for state: Actions on To Form ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on To Form ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on To Form ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on To Form ::: PlayParticleEmitter
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = AverageShake
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = White Flash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Blast
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM StateName: Form
 \----PFSM ---- Transitions for state: Transition on CAST to state Cast
 \----PFSM ---- Actions for state: Actions on Form ::: SetMeshRenderer
 \----PFSM ---- Actions for state: Actions on Form ::: PlayParticleEmitter
 \----PFSM ---- Actions for state: Actions on Form ::: StopParticleEmitter
 \----PFSM ---- Actions for state: Actions on Form ::: StopParticleEmitter
 \----PFSM ---- Actions for state: Actions on Form ::: Tk2dPlayAnimation
 \----PFSM ---- SetMeshRenderer (Name) = 
 \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Sprite
 \----PFSM ---- SetMeshRenderer (active) = True
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) =  Idle
 \----PFSM StateName: Cast
 \----PFSM ---- Transitions for state: Transition on IDLE to state Idle
 \----PFSM ---- Actions for state: Actions on Cast ::: Tk2dPlayAnimation
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) =  Cast
 \----PFSM StateName: Idle
 \----PFSM ---- Transitions for state: Transition on CAST to state Cast
 \----PFSM ---- Actions for state: Actions on Idle ::: Tk2dPlayAnimation
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) =  Idle
 \--PFSM Active: True
 \--PFSM ActiveStateName: Off
Cutscene Dreamer\Burst Pt
                  \--Component: Transform
                  \--GameObject layer: 16
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.3, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (1.0, 1.0, 1.0)
                  \--Component: ParticleSystem
                  \--Component: ParticleSystemRenderer
Cutscene Dreamer\White Flash
                  \--Component: Transform
                  \--GameObject layer: 0
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.3, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (11.6, 11.6, 11.6)
                  \--Component: SpriteRenderer
                  \--Component: SimpleSpriteFade
Cutscene Dreamer\Orb Pt
                  \--Component: Transform
                  \--GameObject layer: 16
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.3, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (1.0, 1.0, 1.0)
                  \--Component: ParticleSystem
                  \--Component: ParticleSystemRenderer
Cutscene Dreamer\Trail Pt
                  \--Component: Transform
                  \--GameObject layer: 16
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.3, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (1.0, 1.0, 1.0)
                  \--Component: ParticleSystem
                  \--Component: ParticleSystemRenderer
Cutscene Dreamer\Sprite
                  \--Component: Transform
                  \--GameObject layer: 0
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.5, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (1.6, 1.6, 1.6)
                  \--Component: MeshFilter
                  \--Component: MeshRenderer
                  \--Component: tk2dSprite
                  \--Component: tk2dSpriteAnimator
                  \--Component: PlayMakerFSM
                  \--PFSM Name: Bob
                  \--PFSM FsmDescription: 
                  \--PFSM StateNames
                  \----PFSM StateName: State 1
                  \----PFSM ---- Actions for state: Actions on State 1 ::: iTweenMoveBy
                  \----PFSM StateName: Get
                  \--PFSM Active: True
                  \--PFSM ActiveStateName: State 1
                  \--Component: iTweenFSMEvents
                  \--Component: iTween
Cutscene Dreamer\Sprite\Idle Pt
                         \--Component: Transform
                         \--GameObject layer: 16
                         \--GameObject tag: Untagged
                         \--Transform Position: (18.9, 34.1, 0.0)
                         \--Transform Rotation: (0.0, 0.0, 0.0)
                         \--Transform LocalScale: (1.0, 2.3, 1.0)
                         \--Component: ParticleSystem
                         \--Component: ParticleSystemRenderer
Cutscene Dreamer\Blast
                  \--Component: Transform
                  \--GameObject layer: 11
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.3, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (-3.0, 3.0, 1.0)
                  \--Component: MeshFilter
                  \--Component: MeshRenderer
                  \--Component: tk2dSprite
                  \--Component: tk2dSpriteAnimator
                  \--Component: PlayMakerFSM
                  \--PFSM Name: FSM
                  \--PFSM FsmDescription: 
                  \--PFSM StateNames
                  \----PFSM StateName: Wait
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Reparent?
                  \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dPlayFrame
                  \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dWatchAnimationEvents
                  \----PFSM StateName: Destroy
                  \----PFSM ---- Actions for state: Actions on Destroy ::: ActivateGameObject
                  \----PFSM ---- ActivateGameObject (Name) = 
                  \----PFSM ---- ActivateGameObject (GameObject) = None
                  \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
                  \----PFSM ---- ActivateGameObject (activate) = False
                  \----PFSM StateName: Reposition?
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Set Rotation?
                  \----PFSM ---- Actions for state: Actions on Reposition? ::: SetMeshRenderer
                  \----PFSM ---- Actions for state: Actions on Reposition? ::: BoolTest
                  \----PFSM ---- Actions for state: Actions on Reposition? ::: SetPosition
                  \----PFSM ---- SetMeshRenderer (Name) = 
                  \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
                  \----PFSM ---- SetMeshRenderer (active) = True
                  \----PFSM ---- BoolTest (Name) = 
                  \----PFSM ---- BoolTest (boolVariable) = True
                  \----PFSM ---- BoolTest (boolVariable?.Name) = Reposition
                  \----PFSM ---- BoolTest (isFalse) = FINISHED
                  \----PFSM ---- BoolTest (isTrue) = 
                  \----PFSM ---- SetPosition (Name) = 
                  \----PFSM ---- SetPosition (GameObject) = None
                  \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
                  \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
                  \----PFSM StateName: Init
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Pause?
                  \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
                  \----PFSM ---- Actions for state: Actions on Init ::: GetParent
                  \----PFSM ---- Actions for state: Actions on Init ::: ActivateAllChildren
                  \----PFSM StateName: Unparent?
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: SetParent
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
                  \----PFSM ---- BoolTest (Name) = 
                  \----PFSM ---- BoolTest (boolVariable) = True
                  \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
                  \----PFSM ---- BoolTest (isFalse) = FINISHED
                  \----PFSM ---- BoolTest (isTrue) = 
                  \----PFSM ---- GetScale(Boolean, everyFrame) = False
                  \----PFSM ---- GetScale(FsmGameObject, Self) = None
                  \----PFSM ---- GetScale(Space, space) = Self
                  \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
                  \----PFSM ---- GetScale(FsmFloat, X Scale) = 0
                  \----PFSM ---- GetScale(FsmFloat, Y Scale) = 0
                  \----PFSM ---- GetScale(FsmFloat, ) = 0
                  \----PFSM ---- GetScale(Boolean, everyFrame) = False
                  \----PFSM ---- GetScale(FsmGameObject, Self) = None
                  \----PFSM ---- GetScale(Space, space) = World
                  \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
                  \----PFSM ---- GetScale(FsmFloat, World X Scale) = 0
                  \----PFSM ---- GetScale(FsmFloat, World Y Scale) = 0
                  \----PFSM ---- GetScale(FsmFloat, ) = 0
                  \----PFSM ---- SetScale (Name) = 
                  \----PFSM ---- SetScale (GameObject) = None
                  \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
                  \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
                  \----PFSM ---- SetScale (everyFrame) = False
                  \----PFSM ---- SetScale (lateUpdate) = False
                  \----PFSM ---- SetScale (x) = 0
                  \----PFSM ---- SetScale (y) = 0
                  \----PFSM ---- SetScale (z) = 0
                  \----PFSM ---- BoolTest (Name) = 
                  \----PFSM ---- BoolTest (boolVariable) = False
                  \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Scale
                  \----PFSM ---- BoolTest (isFalse) = FINISHED
                  \----PFSM ---- BoolTest (isTrue) = 
                  \----PFSM ---- SetScale (Name) = 
                  \----PFSM ---- SetScale (GameObject) = None
                  \----PFSM ---- SetScale (OwnerOption) = UseOwner
                  \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
                  \----PFSM ---- SetScale (everyFrame) = False
                  \----PFSM ---- SetScale (lateUpdate) = False
                  \----PFSM ---- SetScale (x) = 0
                  \----PFSM ---- SetScale (y) = 0
                  \----PFSM ---- SetScale (z) = 0
                  \----PFSM StateName: Reparent?
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Destroy
                  \----PFSM ---- Actions for state: Actions on Reparent? ::: BoolTest
                  \----PFSM ---- Actions for state: Actions on Reparent? ::: SetParent
                  \----PFSM ---- Actions for state: Actions on Reparent? ::: SetScale
                  \----PFSM ---- BoolTest (Name) = 
                  \----PFSM ---- BoolTest (boolVariable) = True
                  \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
                  \----PFSM ---- BoolTest (isFalse) = FINISHED
                  \----PFSM ---- BoolTest (isTrue) = 
                  \----PFSM ---- SetScale (Name) = 
                  \----PFSM ---- SetScale (GameObject) = None
                  \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
                  \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
                  \----PFSM ---- SetScale (everyFrame) = False
                  \----PFSM ---- SetScale (lateUpdate) = False
                  \----PFSM ---- SetScale (x) = 0
                  \----PFSM ---- SetScale (y) = 0
                  \----PFSM ---- SetScale (z) = 0
                  \----PFSM StateName: Pause?
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Reposition?
                  \----PFSM ---- Actions for state: Actions on Pause? ::: FloatCompare
                  \----PFSM ---- Actions for state: Actions on Pause? ::: SetMeshRenderer
                  \----PFSM ---- Actions for state: Actions on Pause? ::: Wait
                  \----PFSM ---- FloatCompare (Name) = 
                  \----PFSM ---- FloatCompare (float1) = 0
                  \----PFSM ---- FloatCompare (float2) = 0
                  \----PFSM ---- FloatCompare (greaterThan) = 
                  \----PFSM ---- FloatCompare (lessThan) = FINISHED
                  \----PFSM ---- FloatCompare (equal) = FINISHED
                  \----PFSM ---- SetMeshRenderer (Name) = 
                  \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
                  \----PFSM ---- SetMeshRenderer (active) = False
                  \----PFSM ---- Wait(String, finishEvent) = FINISHED
                  \----PFSM ---- Wait(Boolean, realTime) = False
                  \----PFSM ---- Wait(FsmFloat, Pause) = 0
                  \----PFSM StateName: Set Rotation?
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Unparent?
                  \----PFSM ---- Actions for state: Actions on Set Rotation? ::: BoolTest
                  \----PFSM ---- Actions for state: Actions on Set Rotation? ::: SetRotation
                  \----PFSM ---- BoolTest (Name) = 
                  \----PFSM ---- BoolTest (boolVariable) = False
                  \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Rotation
                  \----PFSM ---- BoolTest (isFalse) = FINISHED
                  \----PFSM ---- BoolTest (isTrue) = 
                  \----PFSM ---- SetRotation (Name) = 
                  \----PFSM ---- SetRotation (GameObject) = None
                  \----PFSM ---- SetRotation (OwnerOption) = UseOwner
                  \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
                  \----PFSM ---- SetRotation (everyFrame) = False
                  \----PFSM ---- SetRotation (lateUpdate) = False
                  \----PFSM ---- SetRotation (space) = Self
                  \----PFSM ---- SetRotation (xAngle) = 0
                  \----PFSM ---- SetRotation (yAngle) = 0
                  \----PFSM ---- SetRotation (zAngle) = 0
                  \--PFSM Active: False
                  \--PFSM ActiveStateName: 
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Hornet Boss 1
Hornet Boss 1
 \--Component: Transform
 \--GameObject layer: 11
 \--GameObject tag: Untagged
 \--Transform Position: (19.6, 28.6, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (-1.0, 1.0, 1.0)
 \--Component: MeshFilter
 \--Component: MeshRenderer
 \--Component: tk2dSprite
 \--Component: tk2dSpriteAnimator
 \--Component: Rigidbody2D
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (1.4, 1.2)
 \--BoxCollider2D Offset: (0.1, -1.0)
 \--BoxCollider2D Bounds-Min: (18.8, 27.0, 0.0)
 \--BoxCollider2D Bounds-Max: (20.2, 28.2, 0.0)
 \--BoxCollider2D isTrigger: False
 \--Component: PlayMakerFSM
 \--PFSM Name: Control
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Init
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Inert
 \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
 \----PFSM ---- Actions for state: Actions on Init ::: SetGameObject
 \----PFSM ---- Actions for state: Actions on Init ::: SetGravity2dScale
 \----PFSM ---- SetGameObject(Boolean, everyFrame) = False
 \----PFSM ---- SetGameObject(FsmGameObject, Hero) = Knight
 \----PFSM ---- SetGameObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- SetGravity2dScale (Name) = 
 \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 1.5
 \----PFSM StateName: Idle
 \----PFSM ---- Transitions for state: Transition on RUN to state Flip?
 \----PFSM ---- Transitions for state: Transition on FINISHED to state G Sphere?
 \----PFSM ---- Transitions for state: Transition on TOOK DAMAGE to state Dmg Response
 \----PFSM ---- Transitions for state: Transition on EVADE to state Evade Antic
 \----PFSM ---- Actions for state: Actions on Idle ::: FaceObject
 \----PFSM ---- Actions for state: Actions on Idle ::: SetFloatValue
 \----PFSM ---- Actions for state: Actions on Idle ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Idle ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Idle ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Idle ::: BoolTest
 \----PFSM ---- Actions for state: Actions on Idle ::: SendRandomEvent
 \----PFSM ---- Actions for state: Actions on Idle ::: SendRandomEventV2
 \----PFSM ---- Actions for state: Actions on Idle ::: WaitRandom
 \----PFSM ---- FaceObject(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- FaceObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- FaceObject(FsmString, ) = 
 \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
 \----PFSM ---- FaceObject(Boolean, resetFrame) = False
 \----PFSM ---- FaceObject(FsmBool, ) = False
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 999
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Air Dash Pause
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Idle
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- BoolTest (Name) = 
 \----PFSM ---- BoolTest (boolVariable) = False
 \----PFSM ---- BoolTest (boolVariable?.Name) = Evade Range
 \----PFSM ---- BoolTest (isFalse) = 
 \----PFSM ---- BoolTest (isTrue) = EVADE
 \----PFSM ---- SendRandomEvent(FsmFloat, ) = 0
 \----PFSM ---- SendRandomEvent(, Event) = 
 \----PFSM ---- SendRandomEvent(String, Event) = RUN
 \----PFSM ---- SendRandomEvent(Single, Weight) = 0.5
 \----PFSM ---- SendRandomEvent(Single, Weight) = 0.5
 \----PFSM ---- SendRandomEventV2(String, TrackingIntsName) = Ct Idle
 \----PFSM ---- SendRandomEventV2(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV2(String, TrackingIntsName) = Ct Run
 \----PFSM ---- SendRandomEventV2(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV2(String, Event) = IDLE
 \----PFSM ---- SendRandomEventV2(String, Event) = RUN
 \----PFSM ---- SendRandomEventV2(Single, Weight) = 0.5
 \----PFSM ---- SendRandomEventV2(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV2(Single, Weight) = 0.5
 \----PFSM ---- SendRandomEventV2(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV2(Int32, eventMax) = 2
 \----PFSM ---- SendRandomEventV2(String, eventMax Name) = 
 \----PFSM ---- SendRandomEventV2(Int32, eventMax) = 2
 \----PFSM ---- SendRandomEventV2(String, eventMax Name) = 
 \----PFSM ---- WaitRandom(String, finishEvent) = FINISHED
 \----PFSM ---- WaitRandom(Boolean, realTime) = False
 \----PFSM ---- WaitRandom(FsmFloat, Idle Wait Min) = 0.5
 \----PFSM ---- WaitRandom(FsmFloat, Idle Wait Max) = 0.75
 \----PFSM StateName: GDash Antic
 \----PFSM ---- Transitions for state: Transition on FINISHED to state G Dash
 \----PFSM ---- Actions for state: Actions on GDash Antic ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on GDash Antic ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on GDash Antic ::: FaceObject
 \----PFSM ---- Actions for state: Actions on GDash Antic ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on GDash Antic ::: AudioPlayerOneShot
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Antic) = (1.1, -0.9)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Antic) = (1.2, 1.4)
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = G Dash Antic
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- FaceObject(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- FaceObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- FaceObject(FsmString, ) = 
 \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
 \----PFSM ---- FaceObject(Boolean, resetFrame) = False
 \----PFSM ---- FaceObject(FsmBool, ) = False
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 0
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = None
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_04
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_06
 \----PFSM StateName: G Dash
 \----PFSM ---- Transitions for state: Transition on FINISHED to state GDash Recover1
 \----PFSM ---- Actions for state: Actions on G Dash ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on G Dash ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on G Dash ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on G Dash ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on G Dash ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on G Dash ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on G Dash ::: GetScale
 \----PFSM ---- Actions for state: Actions on G Dash ::: FloatOperator
 \----PFSM ---- Actions for state: Actions on G Dash ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on G Dash ::: Wait
 \----PFSM ---- Actions for state: Actions on G Dash ::: CheckCollisionSideEnter
 \----PFSM ---- Actions for state: Actions on G Dash ::: CheckCollisionSide
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = G Dash
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_dash (UnityEngine.AudioClip)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = G Dash Effect
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = EnemyKillShake
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Gdash) = (0.1, -0.8)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size GDash) = (1.6, 1.5)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hit GDash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- GetScale(Boolean, everyFrame) = False
 \----PFSM ---- GetScale(FsmGameObject, ) = None
 \----PFSM ---- GetScale(Space, space) = World
 \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
 \----PFSM ---- GetScale(FsmFloat, X Scale) = 0
 \----PFSM ---- GetScale(FsmFloat, ) = 0
 \----PFSM ---- GetScale(FsmFloat, ) = 0
 \----PFSM ---- FloatOperator (Name) = 
 \----PFSM ---- FloatOperator (min) = -25
 \----PFSM ---- FloatOperator (max) = 0
 \----PFSM ---- BoolTest (operation) = Multiply
 \----PFSM ---- BoolTest (storeResult) = 0
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.35
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = True
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(, bottomHitEvent) = 
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(String, leftHitEvent) = FINISHED
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(String, rightHitEvent) = FINISHED
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(, topHitEvent) = 
 \----PFSM ---- CheckCollisionSideEnter(Boolean, otherLayer) = False
 \----PFSM ---- CheckCollisionSideEnter(Int32, otherLayerNumber) = 0
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = True
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, bottomHitEvent) = 
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(String, leftHitEvent) = FINISHED
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(String, rightHitEvent) = FINISHED
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, topHitEvent) = 
 \----PFSM ---- CheckCollisionSide(Boolean, otherLayer) = False
 \----PFSM ---- CheckCollisionSide(Int32, otherLayerNumber) = 0
 \----PFSM StateName: GDash Recover1
 \----PFSM ---- Transitions for state: Transition on FINISHED to state GDash Recover2
 \----PFSM ---- Actions for state: Actions on GDash Recover1 ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on GDash Recover1 ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on GDash Recover1 ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on GDash Recover1 ::: DecelerateXY
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = G Dash Recover1
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Antic) = (1.1, -0.9)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Antic) = (1.2, 1.4)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hit GDash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- DecelerateXY(FsmFloat, ) = 0.77
 \----PFSM ---- DecelerateXY(FsmFloat, ) = 0
 \----PFSM ---- DecelerateXY(FsmGameObject, ) = None
 \----PFSM StateName: GDash Recover2
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Escalation
 \----PFSM ---- Actions for state: Actions on GDash Recover2 ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on GDash Recover2 ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on GDash Recover2 ::: DecelerateXY
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = G Dash Recover2
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM ---- DecelerateXY(FsmFloat, ) = 0.75
 \----PFSM ---- DecelerateXY(FsmFloat, ) = 0
 \----PFSM ---- DecelerateXY(FsmGameObject, ) = None
 \----PFSM StateName: Pause
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Init
 \----PFSM ---- Actions for state: Actions on Pause ::: NextFrameEvent
 \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
 \----PFSM StateName: Jump Antic
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Aim Jump
 \----PFSM ---- Actions for state: Actions on Jump Antic ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Jump Antic ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Jump Antic ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Jump Antic ::: FaceObject
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Jump Antic
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- FaceObject(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- FaceObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- FaceObject(FsmString, ) = 
 \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
 \----PFSM ---- FaceObject(Boolean, resetFrame) = False
 \----PFSM ---- FaceObject(FsmBool, ) = False
 \----PFSM StateName: Aim Jump
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump
 \----PFSM ---- Transitions for state: Transition on REDO to state Re Aim
 \----PFSM ---- Transitions for state: Transition on SPHERE A to state Aim Sphere Jump
 \----PFSM ---- Actions for state: Actions on Aim Jump ::: BoolTest
 \----PFSM ---- Actions for state: Actions on Aim Jump ::: RandomFloat
 \----PFSM ---- Actions for state: Actions on Aim Jump ::: GetPosition
 \----PFSM ---- Actions for state: Actions on Aim Jump ::: FloatSubtract
 \----PFSM ---- Actions for state: Actions on Aim Jump ::: FloatInRange
 \----PFSM ---- Actions for state: Actions on Aim Jump ::: FloatMultiply
 \----PFSM ---- BoolTest (Name) = 
 \----PFSM ---- BoolTest (boolVariable) = False
 \----PFSM ---- BoolTest (boolVariable?.Name) = Will Sphere
 \----PFSM ---- BoolTest (isFalse) = 
 \----PFSM ---- BoolTest (isTrue) = SPHERE A
 \----PFSM ---- RandomFloat (Name) = 
 \----PFSM ---- RandomFloat (min) = 16.06
 \----PFSM ---- RandomFloat (max) = 36.53
 \----PFSM ---- RandomFloat (storeResult) = 36.53
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = None
 \----PFSM ---- GetPosition (OwnerOption) = UseOwner
 \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- FloatSubtract(Boolean, everyFrame) = False
 \----PFSM ---- FloatSubtract(FsmFloat, Jump X) = 36.53
 \----PFSM ---- FloatSubtract(Boolean, perSecond) = False
 \----PFSM ---- FloatSubtract(FsmFloat, Self X) = 0
 \----PFSM ---- FloatInRange(Boolean, everyFrame) = False
 \----PFSM ---- FloatInRange(FsmFloat, Jump X) = 36.53
 \----PFSM ---- FloatInRange(FsmBool, ) = False
 \----PFSM ---- FloatInRange(, falseEvent) = 
 \----PFSM ---- FloatInRange(String, trueEvent) = REDO
 \----PFSM ---- FloatInRange(FsmFloat, ) = -2.5
 \----PFSM ---- FloatInRange(FsmFloat, ) = 2.5
 \----PFSM ---- FloatMultiply (Name) = 
 \----PFSM ---- FloatMultiply (floatVariable) = 36.53
 \----PFSM ---- FloatMultiply (multiplyBy) = 1
 \----PFSM StateName: Jump
 \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
 \----PFSM ---- Actions for state: Actions on Jump ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Jump ::: AudioPlayerOneShot
 \----PFSM ---- Actions for state: Actions on Jump ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Jump ::: NextFrameEvent
 \----PFSM ---- Actions for state: Actions on Jump ::: RandomFloat
 \----PFSM ---- Actions for state: Actions on Jump ::: SetVelocity2d
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_jump (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 0
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = None
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_03
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_05
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_07
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Jump
 \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
 \----PFSM ---- RandomFloat (Name) = 
 \----PFSM ---- RandomFloat (min) = 41
 \----PFSM ---- RandomFloat (max) = 41
 \----PFSM ---- RandomFloat (storeResult) = 16.06
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 36.53
 \----PFSM ---- SetVelocity2d (y) = 16.06
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM StateName: In Air
 \----PFSM ---- Transitions for state: Transition on LAND to state Land
 \----PFSM ---- Transitions for state: Transition on AIRDASH to state ADash Antic
 \----PFSM ---- Transitions for state: Transition on SPHERE A to state Do Sphere?
 \----PFSM ---- Actions for state: Actions on In Air ::: CheckCollisionSide
 \----PFSM ---- Actions for state: Actions on In Air ::: CheckCollisionSideEnter
 \----PFSM ---- Actions for state: Actions on In Air ::: GetPosition
 \----PFSM ---- Actions for state: Actions on In Air ::: GetVelocity2d
 \----PFSM ---- Actions for state: Actions on In Air ::: Wait
 \----PFSM ---- Actions for state: Actions on In Air ::: FloatTestToBool
 \----PFSM ---- Actions for state: Actions on In Air ::: FloatTestToBool
 \----PFSM ---- Actions for state: Actions on In Air ::: BoolTestMulti
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(String, bottomHitEvent) = LAND
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, leftHitEvent) = 
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, rightHitEvent) = 
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, topHitEvent) = 
 \----PFSM ---- CheckCollisionSide(Boolean, otherLayer) = False
 \----PFSM ---- CheckCollisionSide(Int32, otherLayerNumber) = 0
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(String, bottomHitEvent) = LAND
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(, leftHitEvent) = 
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(, rightHitEvent) = 
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(, topHitEvent) = 
 \----PFSM ---- CheckCollisionSideEnter(Boolean, otherLayer) = False
 \----PFSM ---- CheckCollisionSideEnter(Int32, otherLayerNumber) = 0
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = None
 \----PFSM ---- GetPosition (OwnerOption) = UseOwner
 \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- GetVelocity2d (Name) = 
 \----PFSM ---- GetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- GetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- GetVelocity2d (x) = 0
 \----PFSM ---- GetVelocity2d (y) = 0
 \----PFSM ---- GetVelocity2d (space) = World
 \----PFSM ---- GetVelocity2d (everyFrame) = True
 \----PFSM ---- Wait(String, finishEvent) = AIRDASH
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, Air Dash Pause) = 0
 \----PFSM ---- FloatTestToBool (Name) = 
 \----PFSM ---- FloatTestToBool (everyFrame) = True
 \----PFSM ---- FloatTestToBool (float1) = 0
 \----PFSM ---- FloatTestToBool (float1 Name) = Y Velocity
 \----PFSM ---- FloatTestToBool (float2) = 0
 \----PFSM ---- FloatTestToBool (float2 Name) = 
 \----PFSM ---- FloatTestToBool (greaterThanBool) = False
 \----PFSM ---- FloatTestToBool (lessThanBool) = False
 \----PFSM ---- FloatTestToBool (equalBool) = False
 \----PFSM ---- FloatTestToBool (tolerance) = 0
 \----PFSM ---- FloatTestToBool (Name) = 
 \----PFSM ---- FloatTestToBool (everyFrame) = True
 \----PFSM ---- FloatTestToBool (float1) = 0
 \----PFSM ---- FloatTestToBool (float1 Name) = Self Y
 \----PFSM ---- FloatTestToBool (float2) = 33.8
 \----PFSM ---- FloatTestToBool (float2 Name) = Sphere Y
 \----PFSM ---- FloatTestToBool (greaterThanBool) = False
 \----PFSM ---- FloatTestToBool (lessThanBool) = False
 \----PFSM ---- FloatTestToBool (equalBool) = False
 \----PFSM ---- FloatTestToBool (tolerance) = 0
 \----PFSM ---- BoolTestMulti (Name) = 
 \----PFSM ---- BoolTestMulti(FsmBool, ) = True
 \----PFSM ---- BoolTestMulti(FsmBool, ) = True
 \----PFSM ---- BoolTestMulti(FsmBool, ) = True
 \----PFSM ---- BoolTestMulti(FsmBool, Below Sphere Y) = False
 \----PFSM ---- BoolTestMulti(FsmBool, Falling) = False
 \----PFSM ---- BoolTestMulti(FsmBool, Will Sphere) = False
 \----PFSM ---- BoolTestMulti(Boolean, everyFrame) = True
 \----PFSM ---- BoolTestMulti(FsmBool, ) = False
 \----PFSM ---- BoolTestMulti (falseEvent) = 
 \----PFSM ---- BoolTestMulti (trueEvent) = SPHERE A
 \----PFSM StateName: Land
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Escalation
 \----PFSM ---- Actions for state: Actions on Land ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Land ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Land ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Land ::: SetBoxColliderTrigger
 \----PFSM ---- Actions for state: Actions on Land ::: SetGravity2dScale
 \----PFSM ---- Actions for state: Actions on Land ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Land ::: SetRotation
 \----PFSM ---- Actions for state: Actions on Land ::: SetScale
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_ground_land (UnityEngine.AudioClip)
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Land
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- SetGravity2dScale (Name) = 
 \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 1.5
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM ---- SetRotation (Name) = 
 \----PFSM ---- SetRotation (GameObject) = None
 \----PFSM ---- SetRotation (OwnerOption) = UseOwner
 \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetRotation (everyFrame) = False
 \----PFSM ---- SetRotation (lateUpdate) = False
 \----PFSM ---- SetRotation (space) = World
 \----PFSM ---- SetRotation (xAngle) = 0
 \----PFSM ---- SetRotation (yAngle) = 0
 \----PFSM ---- SetRotation (zAngle) = 0
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 0
 \----PFSM ---- SetScale (y) = 1
 \----PFSM ---- SetScale (z) = 0
 \----PFSM StateName: Re Aim
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Aim Jump
 \----PFSM StateName: Set ADash
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump Antic
 \----PFSM ---- Actions for state: Actions on Set ADash ::: RandomFloat
 \----PFSM ---- Actions for state: Actions on Set ADash ::: SetBoolValue
 \----PFSM ---- RandomFloat (Name) = 
 \----PFSM ---- RandomFloat (min) = 0.15
 \----PFSM ---- RandomFloat (max) = 0.4
 \----PFSM ---- RandomFloat (storeResult) = 0
 \----PFSM ---- SetBoolValue (Name) = 
 \----PFSM ---- SetBoolValue (boolValue) = False
 \----PFSM ---- SetBoolValue (boolValue?.Name) = 
 \----PFSM ---- SetBoolValue (boolVariable) = False
 \----PFSM ---- SetBoolValue (boolVariable?.Name) = Will Sphere
 \----PFSM StateName: ADash Antic
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Fire
 \----PFSM ---- Transitions for state: Transition on CANCEL to state In Air
 \----PFSM ---- Actions for state: Actions on ADash Antic ::: BoolTest
 \----PFSM ---- Actions for state: Actions on ADash Antic ::: GetAngleToTarget2D
 \----PFSM ---- Actions for state: Actions on ADash Antic ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on ADash Antic ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on ADash Antic ::: FaceObject
 \----PFSM ---- Actions for state: Actions on ADash Antic ::: DecelerateV2
 \----PFSM ---- Actions for state: Actions on ADash Antic ::: SetGravity2dScale
 \----PFSM ---- Actions for state: Actions on ADash Antic ::: AudioPlayerOneShot
 \----PFSM ---- BoolTest (Name) = 
 \----PFSM ---- BoolTest (boolVariable) = True
 \----PFSM ---- BoolTest (boolVariable?.Name) = A Dash Range
 \----PFSM ---- BoolTest (isFalse) = CANCEL
 \----PFSM ---- BoolTest (isTrue) = 
 \----PFSM ---- GetAngleToTarget2D(FsmGameObject, ) = None
 \----PFSM ---- GetAngleToTarget2D(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- GetAngleToTarget2D(FsmFloat, Angle) = 0
 \----PFSM ---- GetAngleToTarget2D(FsmFloat, ) = 0
 \----PFSM ---- GetAngleToTarget2D(String, offsetX Name) = 
 \----PFSM ---- GetAngleToTarget2D(FsmFloat, ) = -0.5
 \----PFSM ---- GetAngleToTarget2D(String, offsetY Name) = 
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Antic) = (1.1, -0.9)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Antic) = (1.2, 1.4)
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = A Dash Antic
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- FaceObject(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- FaceObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- FaceObject(FsmString, ) = 
 \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
 \----PFSM ---- FaceObject(Boolean, resetFrame) = False
 \----PFSM ---- FaceObject(FsmBool, ) = False
 \----PFSM ---- SetGravity2dScale (Name) = 
 \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 0
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 0
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = None
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_04
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_06
 \----PFSM StateName: A Dash
 \----PFSM ---- Transitions for state: Transition on WALL L to state Wall L
 \----PFSM ---- Transitions for state: Transition on WALL R to state Wall R
 \----PFSM ---- Transitions for state: Transition on LAND to state Land Y
 \----PFSM ---- Transitions for state: Transition on ROOF to state Hit Roof
 \----PFSM ---- Actions for state: Actions on A Dash ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on A Dash ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on A Dash ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on A Dash ::: GetPosition
 \----PFSM ---- Actions for state: Actions on A Dash ::: SetFloatValue
 \----PFSM ---- Actions for state: Actions on A Dash ::: FloatCompare
 \----PFSM ---- Actions for state: Actions on A Dash ::: FloatCompare
 \----PFSM ---- Actions for state: Actions on A Dash ::: FloatCompare
 \----PFSM ---- Actions for state: Actions on A Dash ::: FloatCompare
 \----PFSM ---- Actions for state: Actions on A Dash ::: Tk2dPlayAnimation
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = A Dash Effect
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_dash (UnityEngine.AudioClip)
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = EnemyKillShake
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = None
 \----PFSM ---- GetPosition (OwnerOption) = UseOwner
 \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 999
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Air Dash Pause
 \----PFSM ---- FloatCompare (Name) = 
 \----PFSM ---- FloatCompare (float1) = 0
 \----PFSM ---- FloatCompare (float2) = 27.55
 \----PFSM ---- FloatCompare (greaterThan) = 
 \----PFSM ---- FloatCompare (lessThan) = LAND
 \----PFSM ---- FloatCompare (equal) = LAND
 \----PFSM ---- FloatCompare (Name) = 
 \----PFSM ---- FloatCompare (float1) = 0
 \----PFSM ---- FloatCompare (float2) = 40.54
 \----PFSM ---- FloatCompare (greaterThan) = ROOF
 \----PFSM ---- FloatCompare (lessThan) = 
 \----PFSM ---- FloatCompare (equal) = ROOF
 \----PFSM ---- FloatCompare (Name) = 
 \----PFSM ---- FloatCompare (float1) = 0
 \----PFSM ---- FloatCompare (float2) = 15.13
 \----PFSM ---- FloatCompare (greaterThan) = 
 \----PFSM ---- FloatCompare (lessThan) = WALL L
 \----PFSM ---- FloatCompare (equal) = WALL L
 \----PFSM ---- FloatCompare (Name) = 
 \----PFSM ---- FloatCompare (float1) = 0
 \----PFSM ---- FloatCompare (float2) = 37.9
 \----PFSM ---- FloatCompare (greaterThan) = WALL R
 \----PFSM ---- FloatCompare (lessThan) = 
 \----PFSM ---- FloatCompare (equal) = WALL R
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = A Dash
 \----PFSM StateName: Land Y
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Hard Land
 \----PFSM ---- Actions for state: Actions on Land Y ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Land Y ::: SetScale
 \----PFSM ---- Actions for state: Actions on Land Y ::: ActivateGameObject
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = None
 \----PFSM ---- SetPosition (OwnerOption) = UseOwner
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 0
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hit ADash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM StateName: Fire
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Firing L
 \----PFSM ---- Transitions for state: Transition on FLIP Y to state Firing R
 \----PFSM ---- Actions for state: Actions on Fire ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Fire ::: SetBoxColliderTrigger
 \----PFSM ---- Actions for state: Actions on Fire ::: FireAtTarget
 \----PFSM ---- Actions for state: Actions on Fire ::: SetVelocityAsAngle
 \----PFSM ---- Actions for state: Actions on Fire ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Fire ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Fire ::: SetScale
 \----PFSM ---- Actions for state: Actions on Fire ::: FaceAngle
 \----PFSM ---- Actions for state: Actions on Fire ::: GetRotation
 \----PFSM ---- Actions for state: Actions on Fire ::: FloatInRange
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_dash (UnityEngine.AudioClip)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Adash) = (0.1, 0.0)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size ADash) = (1.5, 1.0)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hit ADash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 1
 \----PFSM ---- SetScale (y) = 1
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- FloatInRange(Boolean, everyFrame) = False
 \----PFSM ---- FloatInRange(FsmFloat, Angle) = 0
 \----PFSM ---- FloatInRange(FsmBool, ) = False
 \----PFSM ---- FloatInRange(, falseEvent) = 
 \----PFSM ---- FloatInRange(String, trueEvent) = FLIP Y
 \----PFSM ---- FloatInRange(FsmFloat, ) = 90
 \----PFSM ---- FloatInRange(FsmFloat, ) = 270
 \----PFSM StateName: Firing R
 \----PFSM ---- Transitions for state: Transition on FINISHED to state A Dash
 \----PFSM ---- Actions for state: Actions on Firing R ::: SetScale
 \----PFSM ---- Actions for state: Actions on Firing R ::: SetFloatValue
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 0
 \----PFSM ---- SetScale (y) = -1
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = -1
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Return X Scale
 \----PFSM StateName: Firing L
 \----PFSM ---- Transitions for state: Transition on FINISHED to state A Dash
 \----PFSM ---- Actions for state: Actions on Firing L ::: SetFloatValue
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 1
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Return X Scale
 \----PFSM StateName: Hit Roof
 \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
 \----PFSM ---- Actions for state: Actions on Hit Roof ::: SetScale
 \----PFSM ---- Actions for state: Actions on Hit Roof ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Hit Roof ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Hit Roof ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Hit Roof ::: SetBoxColliderTrigger
 \----PFSM ---- Actions for state: Actions on Hit Roof ::: SetGravity2dScale
 \----PFSM ---- Actions for state: Actions on Hit Roof ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Hit Roof ::: SetRotation
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 0
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hit ADash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = None
 \----PFSM ---- SetPosition (OwnerOption) = UseOwner
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- SetGravity2dScale (Name) = 
 \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 2
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM ---- SetRotation (Name) = 
 \----PFSM ---- SetRotation (GameObject) = None
 \----PFSM ---- SetRotation (OwnerOption) = UseOwner
 \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetRotation (everyFrame) = False
 \----PFSM ---- SetRotation (lateUpdate) = False
 \----PFSM ---- SetRotation (space) = World
 \----PFSM ---- SetRotation (xAngle) = 0
 \----PFSM ---- SetRotation (yAngle) = 0
 \----PFSM ---- SetRotation (zAngle) = 0
 \----PFSM StateName: Wall L
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump R
 \----PFSM ---- Actions for state: Actions on Wall L ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Wall L ::: SetRotation
 \----PFSM ---- Actions for state: Actions on Wall L ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Wall L ::: SetScale
 \----PFSM ---- Actions for state: Actions on Wall L ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Wall L ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Wall L ::: SetBoxColliderTrigger
 \----PFSM ---- Actions for state: Actions on Wall L ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Wall L ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_wall_land (UnityEngine.AudioClip)
 \----PFSM ---- SetRotation (Name) = 
 \----PFSM ---- SetRotation (GameObject) = None
 \----PFSM ---- SetRotation (OwnerOption) = UseOwner
 \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetRotation (everyFrame) = False
 \----PFSM ---- SetRotation (lateUpdate) = False
 \----PFSM ---- SetRotation (space) = World
 \----PFSM ---- SetRotation (xAngle) = 0
 \----PFSM ---- SetRotation (yAngle) = 0
 \----PFSM ---- SetRotation (zAngle) = 0
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 1
 \----PFSM ---- SetScale (y) = 1
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = None
 \----PFSM ---- SetPosition (OwnerOption) = UseOwner
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hit ADash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Wall Impact
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM StateName: Jump R
 \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
 \----PFSM ---- Actions for state: Actions on Jump R ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Jump R ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Jump R ::: SetGravity2dScale
 \----PFSM ---- Actions for state: Actions on Jump R ::: SetScale
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 10
 \----PFSM ---- SetVelocity2d (y) = 20
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Jump
 \----PFSM ---- SetGravity2dScale (Name) = 
 \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 2
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = -1
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (z) = 0
 \----PFSM StateName: Wall R
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump L
 \----PFSM ---- Actions for state: Actions on Wall R ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Wall R ::: SetRotation
 \----PFSM ---- Actions for state: Actions on Wall R ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Wall R ::: SetScale
 \----PFSM ---- Actions for state: Actions on Wall R ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Wall R ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Wall R ::: SetBoxColliderTrigger
 \----PFSM ---- Actions for state: Actions on Wall R ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Wall R ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_wall_land (UnityEngine.AudioClip)
 \----PFSM ---- SetRotation (Name) = 
 \----PFSM ---- SetRotation (GameObject) = None
 \----PFSM ---- SetRotation (OwnerOption) = UseOwner
 \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetRotation (everyFrame) = False
 \----PFSM ---- SetRotation (lateUpdate) = False
 \----PFSM ---- SetRotation (space) = World
 \----PFSM ---- SetRotation (xAngle) = 0
 \----PFSM ---- SetRotation (yAngle) = 0
 \----PFSM ---- SetRotation (zAngle) = 0
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = -1
 \----PFSM ---- SetScale (y) = 1
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = None
 \----PFSM ---- SetPosition (OwnerOption) = UseOwner
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hit ADash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Wall Impact
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM StateName: Jump L
 \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
 \----PFSM ---- Actions for state: Actions on Jump L ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Jump L ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Jump L ::: SetGravity2dScale
 \----PFSM ---- Actions for state: Actions on Jump L ::: SetScale
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = -10
 \----PFSM ---- SetVelocity2d (y) = 20
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Jump
 \----PFSM ---- SetGravity2dScale (Name) = 
 \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 2
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 1
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (z) = 0
 \----PFSM StateName: Sphere Antic G
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Sphere
 \----PFSM ---- Actions for state: Actions on Sphere Antic G ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Sphere Antic G ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Sphere Antic G ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Sphere Antic G ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Sphere Antic G ::: FaceObject
 \----PFSM ---- Actions for state: Actions on Sphere Antic G ::: AudioPlayerOneShot
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_cast_multiple_attack (UnityEngine.AudioClip)
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Sphere Antic G
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- FaceObject(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- FaceObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- FaceObject(FsmString, ) = 
 \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
 \----PFSM ---- FaceObject(Boolean, resetFrame) = False
 \----PFSM ---- FaceObject(FsmBool, ) = False
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 0
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = None
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_04
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_06
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_08
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_09
 \----PFSM StateName: Sphere
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Sphere Recover
 \----PFSM ---- Actions for state: Actions on Sphere ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Sphere ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Sphere ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Sphere ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Sphere ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Sphere ::: Wait
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_needle_thow (UnityEngine.AudioClip)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Sphere Ball
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Flash Effect
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = EnemyKillShake
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Sphere Attack
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 1
 \----PFSM StateName: Sphere Recover
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Escalation
 \----PFSM ---- Actions for state: Actions on Sphere Recover ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Sphere Recover ::: ActivateGameObject
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Sphere Recover G
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Sphere Ball
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM StateName: Set Jump Only
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump Antic
 \----PFSM ---- Actions for state: Actions on Set Jump Only ::: SetFloatValue
 \----PFSM ---- Actions for state: Actions on Set Jump Only ::: SetBoolValue
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 999
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Air Dash Pause
 \----PFSM ---- SetBoolValue (Name) = 
 \----PFSM ---- SetBoolValue (boolValue) = False
 \----PFSM ---- SetBoolValue (boolValue?.Name) = 
 \----PFSM ---- SetBoolValue (boolVariable) = False
 \----PFSM ---- SetBoolValue (boolVariable?.Name) = Will Sphere
 \----PFSM StateName: Set Sphere A
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump Antic
 \----PFSM ---- Actions for state: Actions on Set Sphere A ::: SetBoolValue
 \----PFSM ---- Actions for state: Actions on Set Sphere A ::: SetFloatValue
 \----PFSM ---- SetBoolValue (Name) = 
 \----PFSM ---- SetBoolValue (boolValue) = True
 \----PFSM ---- SetBoolValue (boolValue?.Name) = 
 \----PFSM ---- SetBoolValue (boolVariable) = False
 \----PFSM ---- SetBoolValue (boolVariable?.Name) = Will Sphere
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 999
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Air Dash Pause
 \----PFSM StateName: Sphere Antic A
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Sphere A
 \----PFSM ---- Actions for state: Actions on Sphere Antic A ::: SetBoolValue
 \----PFSM ---- Actions for state: Actions on Sphere Antic A ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Sphere Antic A ::: SetGravity2dScale
 \----PFSM ---- Actions for state: Actions on Sphere Antic A ::: DecelerateV2
 \----PFSM ---- Actions for state: Actions on Sphere Antic A ::: FaceObject
 \----PFSM ---- Actions for state: Actions on Sphere Antic A ::: AudioPlayerOneShot
 \----PFSM ---- SetBoolValue (Name) = 
 \----PFSM ---- SetBoolValue (boolValue) = False
 \----PFSM ---- SetBoolValue (boolValue?.Name) = 
 \----PFSM ---- SetBoolValue (boolVariable) = False
 \----PFSM ---- SetBoolValue (boolVariable?.Name) = Will Sphere
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Sphere Antic A
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- SetGravity2dScale (Name) = 
 \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 0
 \----PFSM ---- FaceObject(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- FaceObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- FaceObject(FsmString, ) = 
 \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
 \----PFSM ---- FaceObject(Boolean, resetFrame) = False
 \----PFSM ---- FaceObject(FsmBool, ) = False
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 0
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = None
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_04
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_06
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_08
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_09
 \----PFSM StateName: Sphere A
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Sphere Recover A
 \----PFSM ---- Actions for state: Actions on Sphere A ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Sphere A ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Sphere A ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Sphere A ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Sphere A ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Sphere A ::: Wait
 \----PFSM ---- Actions for state: Actions on Sphere A ::: DecelerateV2
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_needle_thow (UnityEngine.AudioClip)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Sphere Ball
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Flash Effect
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = EnemyKillShake
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Sphere Attack
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 1
 \----PFSM StateName: Sphere Recover A
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Sphere A End
 \----PFSM ---- Actions for state: Actions on Sphere Recover A ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Sphere Recover A ::: ActivateGameObject
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Sphere Recover A
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Sphere Ball
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM StateName: Sphere A End
 \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
 \----PFSM ---- Actions for state: Actions on Sphere A End ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Sphere A End ::: SetGravity2dScale
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Fall
 \----PFSM ---- SetGravity2dScale (Name) = 
 \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 1.5
 \----PFSM StateName: Aim Sphere Jump
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump
 \----PFSM ---- Actions for state: Actions on Aim Sphere Jump ::: RandomFloat
 \----PFSM ---- Actions for state: Actions on Aim Sphere Jump ::: GetPosition
 \----PFSM ---- Actions for state: Actions on Aim Sphere Jump ::: FloatSubtract
 \----PFSM ---- Actions for state: Actions on Aim Sphere Jump ::: FloatMultiply
 \----PFSM ---- RandomFloat (Name) = 
 \----PFSM ---- RandomFloat (min) = 16.06
 \----PFSM ---- RandomFloat (max) = 36.53
 \----PFSM ---- RandomFloat (storeResult) = 36.53
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = None
 \----PFSM ---- GetPosition (OwnerOption) = UseOwner
 \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- FloatSubtract(Boolean, everyFrame) = False
 \----PFSM ---- FloatSubtract(FsmFloat, Jump X) = 36.53
 \----PFSM ---- FloatSubtract(Boolean, perSecond) = False
 \----PFSM ---- FloatSubtract(FsmFloat, Self X) = 0
 \----PFSM ---- FloatMultiply (Name) = 
 \----PFSM ---- FloatMultiply (floatVariable) = 36.53
 \----PFSM ---- FloatMultiply (multiplyBy) = 1.25
 \----PFSM StateName: Throw Antic
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Lock?
 \----PFSM ---- Actions for state: Actions on Throw Antic ::: GetAngleToTarget2D
 \----PFSM ---- Actions for state: Actions on Throw Antic ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Throw Antic ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Throw Antic ::: FaceObject
 \----PFSM ---- Actions for state: Actions on Throw Antic ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Throw Antic ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Throw Antic ::: AudioPlayerOneShot
 \----PFSM ---- GetAngleToTarget2D(FsmGameObject, ) = None
 \----PFSM ---- GetAngleToTarget2D(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- GetAngleToTarget2D(FsmFloat, Angle) = 0
 \----PFSM ---- GetAngleToTarget2D(FsmFloat, ) = 0
 \----PFSM ---- GetAngleToTarget2D(String, offsetX Name) = 
 \----PFSM ---- GetAngleToTarget2D(FsmFloat, ) = 0
 \----PFSM ---- GetAngleToTarget2D(String, offsetY Name) = 
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = STUN CONTROL STOP
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Throw) = (1.0, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Throw) = (1.0, 2.6)
 \----PFSM ---- FaceObject(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- FaceObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- FaceObject(FsmString, ) = 
 \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
 \----PFSM ---- FaceObject(Boolean, resetFrame) = False
 \----PFSM ---- FaceObject(FsmBool, ) = False
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Throw Antic
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 0
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = None
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_04
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_06
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_08
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Yell_09
 \----PFSM StateName: Throw
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Thrown
 \----PFSM ---- Actions for state: Actions on Throw ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Throw ::: GetPosition
 \----PFSM ---- Actions for state: Actions on Throw ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Throw ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Throw ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Throw ::: Vector3AddXYZ
 \----PFSM ---- Actions for state: Actions on Throw ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Throw ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Throw ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Throw ::: SetVelocityAsAngle
 \----PFSM ---- Actions for state: Actions on Throw ::: NextFrameEvent
 \----PFSM ---- Actions for state: Actions on Throw ::: SetRecoilSpeed
 \----PFSM ---- Actions for state: Actions on Throw ::: SetCollider
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_needle_throw_and_return (UnityEngine.AudioClip)
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = None
 \----PFSM ---- GetPosition (OwnerOption) = UseOwner
 \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Throw Effect
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = EnemyKillShake
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Throwing) = (0.1, -1.0)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Throwing) = (1.4, 1.2)
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = Needle
 \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Needle
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Throw
 \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
 \----PFSM ---- SetCollider (Name) = 
 \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = Needle Tink
 \----PFSM ---- SetCollider (active) = True
 \----PFSM StateName: Thrown
 \----PFSM ---- Transitions for state: Transition on NEEDLE RETURN to state Throw Recover
 \----PFSM StateName: Throw Recover
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Escalation
 \----PFSM ---- Actions for state: Actions on Throw Recover ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Throw Recover ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Throw Recover ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Throw Recover ::: SetRecoilSpeed
 \----PFSM ---- Actions for state: Actions on Throw Recover ::: SetCollider
 \----PFSM ---- Actions for state: Actions on Throw Recover ::: SendEventByName
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_needle_catch (UnityEngine.AudioClip)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Needle
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Throw Recover
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- SetCollider (Name) = 
 \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = Needle Tink
 \----PFSM ---- SetCollider (active) = False
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = STUN CONTROL START
 \----PFSM StateName: Lock?
 \----PFSM ---- Transitions for state: Transition on LOCK L to state Lock L
 \----PFSM ---- Transitions for state: Transition on LOCK R to state Lock R
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Throw
 \----PFSM ---- Transitions for state: Transition on LOCK UL to state Lock UL
 \----PFSM ---- Transitions for state: Transition on LOCK UR to state Lock UR
 \----PFSM ---- Actions for state: Actions on Lock? ::: FloatInRange
 \----PFSM ---- Actions for state: Actions on Lock? ::: FloatInRange
 \----PFSM ---- Actions for state: Actions on Lock? ::: FloatInRange
 \----PFSM ---- Actions for state: Actions on Lock? ::: FloatInRange
 \----PFSM ---- FloatInRange(Boolean, everyFrame) = False
 \----PFSM ---- FloatInRange(FsmFloat, Angle) = 0
 \----PFSM ---- FloatInRange(FsmBool, ) = False
 \----PFSM ---- FloatInRange(, falseEvent) = 
 \----PFSM ---- FloatInRange(String, trueEvent) = LOCK R
 \----PFSM ---- FloatInRange(FsmFloat, ) = 0
 \----PFSM ---- FloatInRange(FsmFloat, ) = 90
 \----PFSM ---- FloatInRange(Boolean, everyFrame) = False
 \----PFSM ---- FloatInRange(FsmFloat, Angle) = 0
 \----PFSM ---- FloatInRange(FsmBool, ) = False
 \----PFSM ---- FloatInRange(, falseEvent) = 
 \----PFSM ---- FloatInRange(String, trueEvent) = LOCK L
 \----PFSM ---- FloatInRange(FsmFloat, ) = 90
 \----PFSM ---- FloatInRange(FsmFloat, ) = 180
 \----PFSM ---- FloatInRange(Boolean, everyFrame) = False
 \----PFSM ---- FloatInRange(FsmFloat, Angle) = 0
 \----PFSM ---- FloatInRange(FsmBool, ) = False
 \----PFSM ---- FloatInRange(, falseEvent) = 
 \----PFSM ---- FloatInRange(String, trueEvent) = LOCK UL
 \----PFSM ---- FloatInRange(FsmFloat, ) = 180
 \----PFSM ---- FloatInRange(FsmFloat, ) = 270
 \----PFSM ---- FloatInRange(Boolean, everyFrame) = False
 \----PFSM ---- FloatInRange(FsmFloat, Angle) = 0
 \----PFSM ---- FloatInRange(FsmBool, ) = False
 \----PFSM ---- FloatInRange(, falseEvent) = 
 \----PFSM ---- FloatInRange(String, trueEvent) = LOCK UR
 \----PFSM ---- FloatInRange(FsmFloat, ) = 270
 \----PFSM ---- FloatInRange(FsmFloat, ) = 360
 \----PFSM StateName: Lock L
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Throw
 \----PFSM ---- Actions for state: Actions on Lock L ::: SetFloatValue
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 180
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Angle
 \----PFSM StateName: Lock R
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Throw
 \----PFSM ---- Actions for state: Actions on Lock R ::: SetFloatValue
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 0
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Angle
 \----PFSM StateName: Lock UL
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Throw
 \----PFSM ---- Actions for state: Actions on Lock UL ::: SetFloatValue
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 180
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Angle
 \----PFSM StateName: Lock UR
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Throw
 \----PFSM ---- Actions for state: Actions on Lock UR ::: SetFloatValue
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 0
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Angle
 \----PFSM StateName: Flip?
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Run Away?
 \----PFSM ---- Actions for state: Actions on Flip? ::: SendRandomEvent
 \----PFSM ---- Actions for state: Actions on Flip? ::: FlipScale
 \----PFSM ---- SendRandomEvent(FsmFloat, ) = 0
 \----PFSM ---- SendRandomEvent(, Event) = 
 \----PFSM ---- SendRandomEvent(String, Event) = FINISHED
 \----PFSM ---- SendRandomEvent(Single, Weight) = 0.5
 \----PFSM ---- SendRandomEvent(Single, Weight) = 0.5
 \----PFSM StateName: Run
 \----PFSM ---- Transitions for state: Transition on FINISHED to state G Sphere?
 \----PFSM ---- Transitions for state: Transition on TOOK DAMAGE to state Dmg Response
 \----PFSM ---- Transitions for state: Transition on EVADE to state Evade Antic
 \----PFSM ---- Actions for state: Actions on Run ::: AudioPlayInState
 \----PFSM ---- Actions for state: Actions on Run ::: BoolTest
 \----PFSM ---- Actions for state: Actions on Run ::: GetScale
 \----PFSM ---- Actions for state: Actions on Run ::: FloatOperator
 \----PFSM ---- Actions for state: Actions on Run ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Run ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Run ::: WaitRandom
 \----PFSM ---- Actions for state: Actions on Run ::: CheckCollisionSide
 \----PFSM ---- AudioPlayInState(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayInState(FsmGameObject, ) = None
 \----PFSM ---- BoolTest (Name) = 
 \----PFSM ---- BoolTest (boolVariable) = False
 \----PFSM ---- BoolTest (boolVariable?.Name) = Evade Range
 \----PFSM ---- BoolTest (isFalse) = 
 \----PFSM ---- BoolTest (isTrue) = EVADE
 \----PFSM ---- GetScale(Boolean, everyFrame) = False
 \----PFSM ---- GetScale(FsmGameObject, ) = None
 \----PFSM ---- GetScale(Space, space) = World
 \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
 \----PFSM ---- GetScale(FsmFloat, X Scale) = 0
 \----PFSM ---- GetScale(FsmFloat, ) = 0
 \----PFSM ---- GetScale(FsmFloat, ) = 0
 \----PFSM ---- FloatOperator (Name) = 
 \----PFSM ---- FloatOperator (min) = -8
 \----PFSM ---- FloatOperator (max) = 0
 \----PFSM ---- BoolTest (operation) = Multiply
 \----PFSM ---- BoolTest (storeResult) = 0
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Run
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- WaitRandom(String, finishEvent) = FINISHED
 \----PFSM ---- WaitRandom(Boolean, realTime) = False
 \----PFSM ---- WaitRandom(FsmFloat, Run Wait Min) = 0.5
 \----PFSM ---- WaitRandom(FsmFloat, Run Wait Max) = 1
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, bottomHitEvent) = 
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(String, leftHitEvent) = FINISHED
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(String, rightHitEvent) = FINISHED
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, topHitEvent) = 
 \----PFSM ---- CheckCollisionSide(Boolean, otherLayer) = False
 \----PFSM ---- CheckCollisionSide(Int32, otherLayerNumber) = 0
 \----PFSM StateName: Move Choice A
 \----PFSM ---- Transitions for state: Transition on AIRDASH to state Set ADash
 \----PFSM ---- Transitions for state: Transition on SPHERE A to state Set Sphere A
 \----PFSM ---- Transitions for state: Transition on G DASH to state GDash Antic
 \----PFSM ---- Transitions for state: Transition on THROW to state Throw Antic
 \----PFSM ---- Actions for state: Actions on Move Choice A ::: SendEvent
 \----PFSM ---- Actions for state: Actions on Move Choice A ::: SendRandomEventV3
 \----PFSM ---- SendEvent(String, sendEvent) = THROW
 \----PFSM ---- SendEvent(FsmFloat, ) = 0
 \----PFSM ---- SendRandomEventV3(String, TrackingIntsName) = Ct Airdash
 \----PFSM ---- SendRandomEventV3(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV3(String, TrackingIntsName) = Ct A Sphere
 \----PFSM ---- SendRandomEventV3(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV3(String, TrackingIntsName) = Ct G Dash
 \----PFSM ---- SendRandomEventV3(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV3(String, TrackingIntsName) = Ct Throw
 \----PFSM ---- SendRandomEventV3(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV3(String, trackingIntsMissed) = Ms Airdash
 \----PFSM ---- SendRandomEventV3(Int32, trackingIntsMissed) = 0
 \----PFSM ---- SendRandomEventV3(String, trackingIntsMissed) = Ms A Sphere
 \----PFSM ---- SendRandomEventV3(Int32, trackingIntsMissed) = 0
 \----PFSM ---- SendRandomEventV3(String, trackingIntsMissed) = Ms G Dash
 \----PFSM ---- SendRandomEventV3(Int32, trackingIntsMissed) = 0
 \----PFSM ---- SendRandomEventV3(String, trackingIntsMissed) = Ms Throw
 \----PFSM ---- SendRandomEventV3(Int32, trackingIntsMissed) = 0
 \----PFSM ---- SendRandomEventV3(String, Event) = AIRDASH
 \----PFSM ---- SendRandomEventV3(String, Event) = SPHERE A
 \----PFSM ---- SendRandomEventV3(String, Event) = G DASH
 \----PFSM ---- SendRandomEventV3(String, Event) = THROW
 \----PFSM ---- SendRandomEventV3(Single, Weight) = 0.25
 \----PFSM ---- SendRandomEventV3(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV3(Single, Weight) = 0.25
 \----PFSM ---- SendRandomEventV3(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV3(Single, Weight) = 0.25
 \----PFSM ---- SendRandomEventV3(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV3(Single, Weight) = 0.25
 \----PFSM ---- SendRandomEventV3(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, eventMax) = 2
 \----PFSM ---- SendRandomEventV3(String, eventMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, eventMax) = 1
 \----PFSM ---- SendRandomEventV3(String, eventMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, eventMax) = 2
 \----PFSM ---- SendRandomEventV3(String, eventMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, eventMax) = 1
 \----PFSM ---- SendRandomEventV3(String, eventMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, missedMax) = 5
 \----PFSM ---- SendRandomEventV3(String, missedMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, missedMax) = 7
 \----PFSM ---- SendRandomEventV3(String, missedMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, missedMax) = 5
 \----PFSM ---- SendRandomEventV3(String, missedMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, missedMax) = 3
 \----PFSM ---- SendRandomEventV3(String, missedMax Name) = 
 \----PFSM StateName: Hard Land
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Escalation
 \----PFSM ---- Actions for state: Actions on Hard Land ::: PlayParticleEmitter
 \----PFSM ---- Actions for state: Actions on Hard Land ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Hard Land ::: DecelerateXY
 \----PFSM ---- Actions for state: Actions on Hard Land ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Hard Land ::: SetBoxColliderTrigger
 \----PFSM ---- Actions for state: Actions on Hard Land ::: SetGravity2dScale
 \----PFSM ---- Actions for state: Actions on Hard Land ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Hard Land ::: SetRotation
 \----PFSM ---- Actions for state: Actions on Hard Land ::: SetScale
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Hard Land
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- DecelerateXY(FsmFloat, ) = 0.8
 \----PFSM ---- DecelerateXY(FsmFloat, ) = 0
 \----PFSM ---- DecelerateXY(FsmGameObject, ) = None
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- SetGravity2dScale (Name) = 
 \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 1.5
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM ---- SetRotation (Name) = 
 \----PFSM ---- SetRotation (GameObject) = None
 \----PFSM ---- SetRotation (OwnerOption) = UseOwner
 \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetRotation (everyFrame) = False
 \----PFSM ---- SetRotation (lateUpdate) = False
 \----PFSM ---- SetRotation (space) = World
 \----PFSM ---- SetRotation (xAngle) = 0
 \----PFSM ---- SetRotation (yAngle) = 0
 \----PFSM ---- SetRotation (zAngle) = 0
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 0
 \----PFSM ---- SetScale (y) = 1
 \----PFSM ---- SetScale (z) = 0
 \----PFSM StateName: G Sphere?
 \----PFSM ---- Transitions for state: Transition on SPHERE G to state Sphere Antic G
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Can Throw?
 \----PFSM ---- Actions for state: Actions on G Sphere? ::: AudioStop
 \----PFSM ---- Actions for state: Actions on G Sphere? ::: BoolTest
 \----PFSM ---- Actions for state: Actions on G Sphere? ::: SendRandomEventV2
 \----PFSM ---- BoolTest (Name) = 
 \----PFSM ---- BoolTest (boolVariable) = False
 \----PFSM ---- BoolTest (boolVariable?.Name) = Sphere Range
 \----PFSM ---- BoolTest (isFalse) = FINISHED
 \----PFSM ---- BoolTest (isTrue) = 
 \----PFSM ---- SendRandomEventV2(String, TrackingIntsName) = Ct G Sphere
 \----PFSM ---- SendRandomEventV2(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV2(String, TrackingIntsName) = Ct Miss
 \----PFSM ---- SendRandomEventV2(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV2(String, Event) = SPHERE G
 \----PFSM ---- SendRandomEventV2(String, Event) = FINISHED
 \----PFSM ---- SendRandomEventV2(Single, Weight) = 0.2
 \----PFSM ---- SendRandomEventV2(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV2(Single, Weight) = 0.8
 \----PFSM ---- SendRandomEventV2(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV2(Int32, eventMax) = 1
 \----PFSM ---- SendRandomEventV2(String, eventMax Name) = 
 \----PFSM ---- SendRandomEventV2(Int32, eventMax) = 5
 \----PFSM ---- SendRandomEventV2(String, eventMax Name) = 
 \----PFSM StateName: Can Throw?
 \----PFSM ---- Transitions for state: Transition on CAN THROW to state Move Choice A
 \----PFSM ---- Transitions for state: Transition on CANT THROW to state Move Choice B
 \----PFSM ---- Actions for state: Actions on Can Throw? ::: GetPosition
 \----PFSM ---- Actions for state: Actions on Can Throw? ::: FloatTestToBool
 \----PFSM ---- Actions for state: Actions on Can Throw? ::: FloatTestToBool
 \----PFSM ---- Actions for state: Actions on Can Throw? ::: CheckTargetDirection
 \----PFSM ---- Actions for state: Actions on Can Throw? ::: BoolTestMulti
 \----PFSM ---- Actions for state: Actions on Can Throw? ::: BoolTestMulti
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = None
 \----PFSM ---- GetPosition (OwnerOption) = UseOwner
 \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- FloatTestToBool (Name) = 
 \----PFSM ---- FloatTestToBool (everyFrame) = False
 \----PFSM ---- FloatTestToBool (float1) = 0
 \----PFSM ---- FloatTestToBool (float1 Name) = Self X
 \----PFSM ---- FloatTestToBool (float2) = 30.16
 \----PFSM ---- FloatTestToBool (float2 Name) = Throw X R
 \----PFSM ---- FloatTestToBool (greaterThanBool) = False
 \----PFSM ---- FloatTestToBool (lessThanBool) = False
 \----PFSM ---- FloatTestToBool (equalBool) = False
 \----PFSM ---- FloatTestToBool (tolerance) = 0
 \----PFSM ---- FloatTestToBool (Name) = 
 \----PFSM ---- FloatTestToBool (everyFrame) = False
 \----PFSM ---- FloatTestToBool (float1) = 0
 \----PFSM ---- FloatTestToBool (float1 Name) = Self X
 \----PFSM ---- FloatTestToBool (float2) = 22.51
 \----PFSM ---- FloatTestToBool (float2 Name) = Throw X L
 \----PFSM ---- FloatTestToBool (greaterThanBool) = False
 \----PFSM ---- FloatTestToBool (lessThanBool) = False
 \----PFSM ---- FloatTestToBool (equalBool) = False
 \----PFSM ---- FloatTestToBool (tolerance) = 0
 \----PFSM ---- CheckTargetDirection(FsmGameObject, ) = None
 \----PFSM ---- CheckTargetDirection(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- CheckTargetDirection(FsmBool, ) = False
 \----PFSM ---- CheckTargetDirection(FsmBool, Hero Is Right) = False
 \----PFSM ---- CheckTargetDirection(FsmBool, ) = False
 \----PFSM ---- CheckTargetDirection(FsmBool, ) = False
 \----PFSM ---- CheckTargetDirection(, aboveEvent) = 
 \----PFSM ---- CheckTargetDirection(String, rightBool) = Hero Is Right
 \----PFSM ---- CheckTargetDirection(String, leftBool) = 
 \----PFSM ---- CheckTargetDirection(String, belowBool) = 
 \----PFSM ---- BoolTestMulti (Name) = 
 \----PFSM ---- BoolTestMulti(FsmBool, ) = True
 \----PFSM ---- BoolTestMulti(FsmBool, ) = False
 \----PFSM ---- BoolTestMulti(FsmBool, Over Throw R) = False
 \----PFSM ---- BoolTestMulti(FsmBool, Hero Is Right) = False
 \----PFSM ---- BoolTestMulti(Boolean, everyFrame) = False
 \----PFSM ---- BoolTestMulti(FsmBool, ) = False
 \----PFSM ---- BoolTestMulti (falseEvent) = 
 \----PFSM ---- BoolTestMulti (trueEvent) = CAN THROW
 \----PFSM ---- BoolTestMulti (Name) = 
 \----PFSM ---- BoolTestMulti(FsmBool, ) = True
 \----PFSM ---- BoolTestMulti(FsmBool, ) = True
 \----PFSM ---- BoolTestMulti(FsmBool, Under Throw L) = False
 \----PFSM ---- BoolTestMulti(FsmBool, Hero Is Right) = False
 \----PFSM ---- BoolTestMulti(Boolean, everyFrame) = False
 \----PFSM ---- BoolTestMulti(FsmBool, ) = False
 \----PFSM ---- BoolTestMulti (falseEvent) = CANT THROW
 \----PFSM ---- BoolTestMulti (trueEvent) = CAN THROW
 \----PFSM StateName: Move Choice B
 \----PFSM ---- Transitions for state: Transition on AIRDASH to state Set ADash
 \----PFSM ---- Transitions for state: Transition on SPHERE A to state Set Sphere A
 \----PFSM ---- Transitions for state: Transition on G DASH to state GDash Antic
 \----PFSM ---- Actions for state: Actions on Move Choice B ::: SendEvent
 \----PFSM ---- Actions for state: Actions on Move Choice B ::: SendRandomEventV3
 \----PFSM ---- SendEvent(String, sendEvent) = SPHERE A
 \----PFSM ---- SendEvent(FsmFloat, ) = 0
 \----PFSM ---- SendRandomEventV3(String, TrackingIntsName) = Ct Airdash
 \----PFSM ---- SendRandomEventV3(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV3(String, TrackingIntsName) = Ct A Sphere
 \----PFSM ---- SendRandomEventV3(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV3(String, TrackingIntsName) = Ct G Dash
 \----PFSM ---- SendRandomEventV3(Int32, TrackingIntsValue) = 0
 \----PFSM ---- SendRandomEventV3(String, trackingIntsMissed) = Ms Airdash
 \----PFSM ---- SendRandomEventV3(Int32, trackingIntsMissed) = 0
 \----PFSM ---- SendRandomEventV3(String, trackingIntsMissed) = Ms A Sphere
 \----PFSM ---- SendRandomEventV3(Int32, trackingIntsMissed) = 0
 \----PFSM ---- SendRandomEventV3(String, trackingIntsMissed) = Ms G Dash
 \----PFSM ---- SendRandomEventV3(Int32, trackingIntsMissed) = 0
 \----PFSM ---- SendRandomEventV3(String, Event) = AIRDASH
 \----PFSM ---- SendRandomEventV3(String, Event) = SPHERE A
 \----PFSM ---- SendRandomEventV3(String, Event) = G DASH
 \----PFSM ---- SendRandomEventV3(Single, Weight) = 0.33
 \----PFSM ---- SendRandomEventV3(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV3(Single, Weight) = 0.33
 \----PFSM ---- SendRandomEventV3(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV3(Single, Weight) = 0.34
 \----PFSM ---- SendRandomEventV3(String, Weight Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, eventMax) = 2
 \----PFSM ---- SendRandomEventV3(String, eventMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, eventMax) = 1
 \----PFSM ---- SendRandomEventV3(String, eventMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, eventMax) = 2
 \----PFSM ---- SendRandomEventV3(String, eventMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, missedMax) = 5
 \----PFSM ---- SendRandomEventV3(String, missedMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, missedMax) = 7
 \----PFSM ---- SendRandomEventV3(String, missedMax Name) = 
 \----PFSM ---- SendRandomEventV3(Int32, missedMax) = 5
 \----PFSM ---- SendRandomEventV3(String, missedMax Name) = 
 \----PFSM StateName: Evade Antic
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Evade
 \----PFSM ---- Transitions for state: Transition on CANCEL to state G Sphere?
 \----PFSM ---- Actions for state: Actions on Evade Antic ::: AudioStop
 \----PFSM ---- Actions for state: Actions on Evade Antic ::: BoolTest
 \----PFSM ---- Actions for state: Actions on Evade Antic ::: SetBoolValue
 \----PFSM ---- Actions for state: Actions on Evade Antic ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Evade Antic ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Evade Antic ::: FaceObject
 \----PFSM ---- Actions for state: Actions on Evade Antic ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- BoolTest (Name) = 
 \----PFSM ---- BoolTest (boolVariable) = False
 \----PFSM ---- BoolTest (boolVariable?.Name) = Evade Check
 \----PFSM ---- BoolTest (isFalse) = 
 \----PFSM ---- BoolTest (isTrue) = CANCEL
 \----PFSM ---- SetBoolValue (Name) = 
 \----PFSM ---- SetBoolValue (boolValue) = False
 \----PFSM ---- SetBoolValue (boolValue?.Name) = 
 \----PFSM ---- SetBoolValue (boolVariable) = False
 \----PFSM ---- SetBoolValue (boolVariable?.Name) = Evade Range
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = True
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = EVADED
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- FaceObject(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- FaceObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- FaceObject(FsmString, ) = 
 \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
 \----PFSM ---- FaceObject(Boolean, resetFrame) = False
 \----PFSM ---- FaceObject(FsmBool, ) = False
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Evade Antic
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM StateName: Evade
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Evade Land
 \----PFSM ---- Actions for state: Actions on Evade ::: AudioPlayerOneShot
 \----PFSM ---- Actions for state: Actions on Evade ::: AudioPlaySimple
 \----PFSM ---- Actions for state: Actions on Evade ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Evade ::: GetScale
 \----PFSM ---- Actions for state: Actions on Evade ::: FloatOperator
 \----PFSM ---- Actions for state: Actions on Evade ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Evade ::: Wait
 \----PFSM ---- Actions for state: Actions on Evade ::: CheckCollisionSideEnter
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 0
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- AudioPlayerOneShot(FsmGameObject, ) = None
 \----PFSM ---- AudioPlayerOneShot(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(Single, Weight) = 1
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Laugh_01
 \----PFSM ---- AudioPlayerOneShot(String, audioClips) = Hornet_Fight_Laugh_02
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_small_jump (UnityEngine.AudioClip)
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Evade
 \----PFSM ---- GetScale(Boolean, everyFrame) = False
 \----PFSM ---- GetScale(FsmGameObject, ) = None
 \----PFSM ---- GetScale(Space, space) = World
 \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
 \----PFSM ---- GetScale(FsmFloat, X Scale) = 0
 \----PFSM ---- GetScale(FsmFloat, ) = 0
 \----PFSM ---- GetScale(FsmFloat, ) = 0
 \----PFSM ---- FloatOperator (Name) = 
 \----PFSM ---- FloatOperator (min) = 22
 \----PFSM ---- FloatOperator (max) = 0
 \----PFSM ---- BoolTest (operation) = Multiply
 \----PFSM ---- BoolTest (storeResult) = 0
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.25
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(, bottomHitEvent) = 
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(String, leftHitEvent) = FINISHED
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(String, rightHitEvent) = FINISHED
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(, topHitEvent) = 
 \----PFSM ---- CheckCollisionSideEnter(Boolean, otherLayer) = False
 \----PFSM ---- CheckCollisionSideEnter(Int32, otherLayerNumber) = 0
 \----PFSM StateName: Dmg Response
 \----PFSM ---- Transitions for state: Transition on EVADE to state Evade Antic
 \----PFSM ---- Transitions for state: Transition on JUMP to state Set Jump Only
 \----PFSM ---- Transitions for state: Transition on ATTACK to state G Sphere?
 \----PFSM ---- Transitions for state: Transition on IDLE to state Dmg Idle
 \----PFSM ---- Actions for state: Actions on Dmg Response ::: AudioStop
 \----PFSM ---- Actions for state: Actions on Dmg Response ::: SendRandomEvent
 \----PFSM ---- SendRandomEvent(FsmFloat, ) = 0
 \----PFSM ---- SendRandomEvent(String, Event) = EVADE
 \----PFSM ---- SendRandomEvent(String, Event) = JUMP
 \----PFSM ---- SendRandomEvent(String, Event) = ATTACK
 \----PFSM ---- SendRandomEvent(String, Event) = IDLE
 \----PFSM ---- SendRandomEvent(Single, Weight) = 0.3
 \----PFSM ---- SendRandomEvent(Single, Weight) = 0.15
 \----PFSM ---- SendRandomEvent(Single, Weight) = 0.15
 \----PFSM ---- SendRandomEvent(Single, Weight) = 0.4
 \----PFSM StateName: Dmg Idle
 \----PFSM ---- Transitions for state: Transition on FINISHED to state G Sphere?
 \----PFSM ---- Actions for state: Actions on Dmg Idle ::: WaitRandom
 \----PFSM ---- Actions for state: Actions on Dmg Idle ::: CheckCollisionSide
 \----PFSM ---- WaitRandom(String, finishEvent) = FINISHED
 \----PFSM ---- WaitRandom(Boolean, realTime) = False
 \----PFSM ---- WaitRandom(FsmFloat, ) = 0.25
 \----PFSM ---- WaitRandom(FsmFloat, ) = 0.4
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, bottomHitEvent) = 
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(String, leftHitEvent) = FINISHED
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(String, rightHitEvent) = FINISHED
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, topHitEvent) = 
 \----PFSM ---- CheckCollisionSide(Boolean, otherLayer) = False
 \----PFSM ---- CheckCollisionSide(Int32, otherLayerNumber) = 0
 \----PFSM StateName: Run Away?
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Run Antic
 \----PFSM ---- Actions for state: Actions on Run Away? ::: BoolTest
 \----PFSM ---- Actions for state: Actions on Run Away? ::: FaceObject
 \----PFSM ---- Actions for state: Actions on Run Away? ::: FlipScale
 \----PFSM ---- BoolTest (Name) = 
 \----PFSM ---- BoolTest (boolVariable) = False
 \----PFSM ---- BoolTest (boolVariable?.Name) = Run Away Check
 \----PFSM ---- BoolTest (isFalse) = FINISHED
 \----PFSM ---- BoolTest (isTrue) = 
 \----PFSM ---- FaceObject(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- FaceObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- FaceObject(FsmString, ) = 
 \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
 \----PFSM ---- FaceObject(Boolean, resetFrame) = False
 \----PFSM ---- FaceObject(FsmBool, ) = False
 \----PFSM StateName: Evade Land
 \----PFSM ---- Transitions for state: Transition on FINISHED to state After Evade
 \----PFSM ---- Actions for state: Actions on Evade Land ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Evade Land ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Evade Land ::: AudioPlaySimple
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Land
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
 \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
 \----PFSM ---- AudioPlaySimple(FsmObject, ) = hornet_ground_land (UnityEngine.AudioClip)
 \----PFSM StateName: After Evade
 \----PFSM ---- Transitions for state: Transition on IDLE to state Escalation
 \----PFSM ---- Transitions for state: Transition on ATTACK to state G Sphere?
 \----PFSM ---- Actions for state: Actions on After Evade ::: SendRandomEvent
 \----PFSM ---- SendRandomEvent(FsmFloat, ) = 0
 \----PFSM ---- SendRandomEvent(String, Event) = ATTACK
 \----PFSM ---- SendRandomEvent(String, Event) = IDLE
 \----PFSM ---- SendRandomEvent(Single, Weight) = 0.5
 \----PFSM ---- SendRandomEvent(Single, Weight) = 0.5
 \----PFSM StateName: Stun Start
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Stun Air
 \----PFSM ---- Actions for state: Actions on Stun Start ::: AudioPlayRandom
 \----PFSM ---- Actions for state: Actions on Stun Start ::: SetBoxCollider2DSizeVector
 \----PFSM ---- Actions for state: Actions on Stun Start ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Stun Start ::: SpawnObjectFromGlobalPool
 \----PFSM ---- Actions for state: Actions on Stun Start ::: SetFsmFloat
 \----PFSM ---- Actions for state: Actions on Stun Start ::: SetBoxColliderTrigger
 \----PFSM ---- Actions for state: Actions on Stun Start ::: SetGravity2dScale
 \----PFSM ---- Actions for state: Actions on Stun Start ::: SetRotation
 \----PFSM ---- Actions for state: Actions on Stun Start ::: SetScale
 \----PFSM ---- Actions for state: Actions on Stun Start ::: FaceObject
 \----PFSM ---- Actions for state: Actions on Stun Start ::: GetScale
 \----PFSM ---- Actions for state: Actions on Stun Start ::: FloatOperator
 \----PFSM ---- Actions for state: Actions on Stun Start ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Stun Start ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Stun Start ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Stun Start ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Stun Start ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Stun Start ::: SetCollider
 \----PFSM ---- Actions for state: Actions on Stun Start ::: NextFrameEvent
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Sphere Ball
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- SpawnObjectFromGlobalPool (Name) = 
 \----PFSM ---- SpawnObjectFromGlobalPool (gameObject?.Name) = 
 \----PFSM ---- SpawnObjectFromGlobalPool (position) = (0.0, 0.0, 0.0)
 \----PFSM ---- SpawnObjectFromGlobalPool (rotation) = (0.0, 0.0, 0.0)
 \----PFSM ---- SpawnObjectFromGlobalPool (spawnPoint) = Hornet Boss 1
 \----PFSM ---- SpawnObjectFromGlobalPool (storeObject) = None
 \----PFSM ---- SetGravity2dScale (Name) = 
 \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 1.5
 \----PFSM ---- SetRotation (Name) = 
 \----PFSM ---- SetRotation (GameObject) = None
 \----PFSM ---- SetRotation (OwnerOption) = UseOwner
 \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetRotation (everyFrame) = False
 \----PFSM ---- SetRotation (lateUpdate) = False
 \----PFSM ---- SetRotation (space) = World
 \----PFSM ---- SetRotation (xAngle) = 0
 \----PFSM ---- SetRotation (yAngle) = 0
 \----PFSM ---- SetRotation (zAngle) = 0
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 0
 \----PFSM ---- SetScale (y) = 1
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- FaceObject(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- FaceObject(FsmGameObject, Hero Obj) = Knight
 \----PFSM ---- FaceObject(FsmString, ) = 
 \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
 \----PFSM ---- FaceObject(Boolean, resetFrame) = False
 \----PFSM ---- FaceObject(FsmBool, ) = False
 \----PFSM ---- GetScale(Boolean, everyFrame) = False
 \----PFSM ---- GetScale(FsmGameObject, ) = None
 \----PFSM ---- GetScale(Space, space) = World
 \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
 \----PFSM ---- GetScale(FsmFloat, X Scale) = 0
 \----PFSM ---- GetScale(FsmFloat, ) = 0
 \----PFSM ---- GetScale(FsmFloat, ) = 0
 \----PFSM ---- FloatOperator (Name) = 
 \----PFSM ---- FloatOperator (min) = 10
 \----PFSM ---- FloatOperator (max) = 0
 \----PFSM ---- BoolTest (operation) = Multiply
 \----PFSM ---- BoolTest (storeResult) = 0
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Stun Air
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 20
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Needle
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hit ADash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hit GDash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- SetCollider (Name) = 
 \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = Needle Tink
 \----PFSM ---- SetCollider (active) = False
 \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
 \----PFSM StateName: Stun Air
 \----PFSM ---- Transitions for state: Transition on LAND to state Stun Land
 \----PFSM ---- Actions for state: Actions on Stun Air ::: CheckCollisionSideEnter
 \----PFSM ---- Actions for state: Actions on Stun Air ::: CheckCollisionSide
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(String, bottomHitEvent) = LAND
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(, leftHitEvent) = 
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(, rightHitEvent) = 
 \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSideEnter(, topHitEvent) = 
 \----PFSM ---- CheckCollisionSideEnter(Boolean, otherLayer) = False
 \----PFSM ---- CheckCollisionSideEnter(Int32, otherLayerNumber) = 0
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(String, bottomHitEvent) = LAND
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, leftHitEvent) = 
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, rightHitEvent) = 
 \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
 \----PFSM ---- CheckCollisionSide(, topHitEvent) = 
 \----PFSM ---- CheckCollisionSide(Boolean, otherLayer) = False
 \----PFSM ---- CheckCollisionSide(Int32, otherLayerNumber) = 0
 \----PFSM StateName: Stun Land
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Stun Recover
 \----PFSM ---- Transitions for state: Transition on TOOK DAMAGE to state Stun Recover
 \----PFSM ---- Actions for state: Actions on Stun Land ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Stun Land ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Stun Land ::: Wait
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Stun
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = 0
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 3
 \----PFSM StateName: Stun Recover
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Set Jump Only
 \----PFSM StateName: Inert
 \----PFSM ---- Transitions for state: Transition on WAKE to state Wake
 \----PFSM ---- Transitions for state: Transition on REFIGHT to state Refight Ready
 \----PFSM ---- Actions for state: Actions on Inert ::: GetPlayerDataInt
 \----PFSM ---- Actions for state: Actions on Inert ::: IntCompare
 \----PFSM ---- GetPlayerDataInt (Name) = 
 \----PFSM ---- GetPlayerDataInt (boolName) = hornetGreenpath
 \----PFSM ---- GetPlayerDataInt (storeValue) = 4
 \----PFSM ---- IntCompare (Name) = 
 \----PFSM ---- IntCompare (integer1) = 4
 \----PFSM ---- IntCompare (integer2) = 4
 \----PFSM ---- IntCompare (greaterThan) = REFIGHT
 \----PFSM ---- IntCompare (lessThan) = 
 \----PFSM ---- IntCompare (equal) = REFIGHT
 \----PFSM StateName: Wake
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Flourish
 \----PFSM ---- Actions for state: Actions on Wake ::: SetIsKinematic2d
 \----PFSM ---- Actions for state: Actions on Wake ::: SetCollider
 \----PFSM ---- Actions for state: Actions on Wake ::: SetMeshRenderer
 \----PFSM ---- Actions for state: Actions on Wake ::: SetScale
 \----PFSM ---- Actions for state: Actions on Wake ::: SetBoxCollider2DSizeVector
 \----PFSM ---- SetIsKinematic2d (Name) = 
 \----PFSM ---- SetIsKinematic2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetIsKinematic2d (isKinematic) = False
 \----PFSM ---- SetCollider (Name) = 
 \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetCollider (active) = True
 \----PFSM ---- SetMeshRenderer (Name) = 
 \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetMeshRenderer (active) = True
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = -1
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmGameObject, ) = None
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Off Idle) = (0.1, -0.3)
 \----PFSM ---- SetBoxCollider2DSizeVector(FsmVector2, Box Size Idle) = (0.9, 2.6)
 \----PFSM StateName: Do Sphere?
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Sphere Antic A
 \----PFSM ---- Transitions for state: Transition on CANCEL to state In Air
 \----PFSM ---- Actions for state: Actions on Do Sphere? ::: SetBoolValue
 \----PFSM ---- Actions for state: Actions on Do Sphere? ::: BoolTest
 \----PFSM ---- SetBoolValue (Name) = 
 \----PFSM ---- SetBoolValue (boolValue) = False
 \----PFSM ---- SetBoolValue (boolValue?.Name) = 
 \----PFSM ---- SetBoolValue (boolVariable) = False
 \----PFSM ---- SetBoolValue (boolVariable?.Name) = Will Sphere
 \----PFSM ---- BoolTest (Name) = 
 \----PFSM ---- BoolTest (boolVariable) = False
 \----PFSM ---- BoolTest (boolVariable?.Name) = A Sphere Range
 \----PFSM ---- BoolTest (isFalse) = CANCEL
 \----PFSM ---- BoolTest (isTrue) = FINISHED
 \----PFSM StateName: Refight Ready
 \----PFSM ---- Transitions for state: Transition on WAKE to state Refight Wake
 \----PFSM ---- Actions for state: Actions on Refight Ready ::: SetIsKinematic2d
 \----PFSM ---- Actions for state: Actions on Refight Ready ::: SetCollider
 \----PFSM ---- Actions for state: Actions on Refight Ready ::: SetMeshRenderer
 \----PFSM ---- Actions for state: Actions on Refight Ready ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Refight Ready ::: BoolTest
 \----PFSM ---- Actions for state: Actions on Refight Ready ::: SetScale
 \----PFSM ---- Actions for state: Actions on Refight Ready ::: FindGameObject
 \----PFSM ---- SetIsKinematic2d (Name) = 
 \----PFSM ---- SetIsKinematic2d (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetIsKinematic2d (isKinematic) = False
 \----PFSM ---- SetCollider (Name) = 
 \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetCollider (active) = True
 \----PFSM ---- SetMeshRenderer (Name) = 
 \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = 
 \----PFSM ---- SetMeshRenderer (active) = True
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Idle
 \----PFSM ---- BoolTest (Name) = 
 \----PFSM ---- BoolTest (boolVariable) = True
 \----PFSM ---- BoolTest (boolVariable?.Name) = Refight Range
 \----PFSM ---- BoolTest (isFalse) = 
 \----PFSM ---- BoolTest (isTrue) = WAKE
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = None
 \----PFSM ---- SetScale (OwnerOption) = UseOwner
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = -1
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (z) = 0
 \----PFSM StateName: Refight Wake
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Flourish
 \----PFSM ---- Actions for state: Actions on Refight Wake ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Refight Wake ::: ActivateAllChildren
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = BG CLOSE
 \----PFSM StateName: Escalation
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
 \----PFSM ---- Actions for state: Actions on Escalation ::: BoolTest
 \----PFSM ---- Actions for state: Actions on Escalation ::: GetFsmInt
 \----PFSM ---- Actions for state: Actions on Escalation ::: IntCompare
 \----PFSM ---- Actions for state: Actions on Escalation ::: SetBoolValue
 \----PFSM ---- Actions for state: Actions on Escalation ::: SetFloatValue
 \----PFSM ---- Actions for state: Actions on Escalation ::: SetFloatValue
 \----PFSM ---- Actions for state: Actions on Escalation ::: SetFloatValue
 \----PFSM ---- Actions for state: Actions on Escalation ::: SetFloatValue
 \----PFSM ---- BoolTest (Name) = 
 \----PFSM ---- BoolTest (boolVariable) = False
 \----PFSM ---- BoolTest (boolVariable?.Name) = Escalated
 \----PFSM ---- BoolTest (isFalse) = 
 \----PFSM ---- BoolTest (isTrue) = FINISHED
 \----PFSM ---- GetFsmInt (Name) = 
 \----PFSM ---- GetFsmInt (GameObject) = None
 \----PFSM ---- GetFsmInt (OwnerOption) = UseOwner
 \----PFSM ---- GetFsmInt (fsmName) = health_manager_enemy
 \----PFSM ---- GetFsmInt (variableName) = HP
 \----PFSM ---- GetFsmInt (everyFrame) = False
 \----PFSM ---- GetFsmInt (storeValue) = 0
 \----PFSM ---- IntCompare (Name) = 
 \----PFSM ---- IntCompare (integer1) = 0
 \----PFSM ---- IntCompare (integer2) = 90
 \----PFSM ---- IntCompare (greaterThan) = FINISHED
 \----PFSM ---- IntCompare (lessThan) = 
 \----PFSM ---- IntCompare (equal) = 
 \----PFSM ---- SetBoolValue (Name) = 
 \----PFSM ---- SetBoolValue (boolValue) = True
 \----PFSM ---- SetBoolValue (boolValue?.Name) = 
 \----PFSM ---- SetBoolValue (boolVariable) = False
 \----PFSM ---- SetBoolValue (boolVariable?.Name) = Escalated
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 0.35
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0.5
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Run Wait Min
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 0.75
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 1
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Run Wait Max
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 0.1
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0.5
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Idle Wait Min
 \----PFSM ---- SetFloatValue (Name) = 
 \----PFSM ---- SetFloatValue (floatValue) = 0.4
 \----PFSM ---- SetFloatValue (floatValue?.Name) = 
 \----PFSM ---- SetFloatValue (floatVariable) = 0.75
 \----PFSM ---- SetFloatValue (floatVariable?.Name) = Idle Wait Max
 \----PFSM StateName: Flourish
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
 \----PFSM ---- Actions for state: Actions on Flourish ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Actions for state: Actions on Flourish ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Flourish ::: SetGameObject
 \----PFSM ---- Actions for state: Actions on Flourish ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Flourish ::: SetFsmBool
 \----PFSM ---- Actions for state: Actions on Flourish ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Flourish ::: TransitionToAudioSnapshot
 \----PFSM ---- Actions for state: Actions on Flourish ::: SetFsmString
 \----PFSM ---- Actions for state: Actions on Flourish ::: ApplyMusicCue
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Flourish
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Self) = Hornet Boss 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
 \----PFSM ---- SetGameObject(Boolean, everyFrame) = False
 \----PFSM ---- SetGameObject(FsmGameObject, AreaTitle) = Area Title
 \----PFSM ---- SetGameObject(FsmGameObject, Area Title) = Area Title
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Area Title
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- SetFsmBool (Name) = 
 \----PFSM ---- SetFsmBool (GameObject) = Area Title
 \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmBool (fsmName) = 
 \----PFSM ---- SetFsmBool (variableName) = Visited
 \----PFSM ---- SetFsmBool (setValue) = True
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = AudioManager
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = BOSS HORNET
 \----PFSM ---- TransitionToAudioSnapshot(FsmObject, snapshot? ) = Normal (UnityEngine.AudioMixerSnapshot)
 \----PFSM ---- TransitionToAudioSnapshot(String, snapshot?. type) = FsmObject
 \----PFSM ---- TransitionToAudioSnapshot(String, snapshot?.Name) = 
 \----PFSM ---- TransitionToAudioSnapshot(FsmFloat, ) = 0
 \----PFSM ---- SetFsmString (Name) = 
 \----PFSM ---- SetFsmString (GameObject) = Area Title
 \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmString (fsmName) = 
 \----PFSM ---- SetFsmString (variableName) = Area Event
 \----PFSM ---- SetFsmString (setValue) = HORNET
 \----PFSM ---- ApplyMusicCue(FsmFloat, ) = 0
 \----PFSM ---- ApplyMusicCue(String, musicCue?.Name) = 
 \----PFSM ---- ApplyMusicCue(FsmObject, musicCue) = BossHornet (MusicCue)
 \----PFSM ---- ApplyMusicCue(String, musicCue type) = FsmObject
 \----PFSM ---- ApplyMusicCue(FsmFloat, ) = 0
 \----PFSM StateName: Run Antic
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Run
 \----PFSM ---- Actions for state: Actions on Run Antic ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Evade Antic
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, ) = None
 \--PFSM Active: True
 \--PFSM ActiveStateName: Flourish
 \--Component: SpriteFlash
 \--Component: SetZ
 \--Component: PlayMakerFSM
 \--PFSM Name: Stun Control
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Init
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
 \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
 \----PFSM StateName: Idle
 \----PFSM ---- Transitions for state: Transition on STUN DAMAGE to state Max Check
 \----PFSM StateName: In Combo
 \----PFSM ---- Transitions for state: Transition on TIME OUT to state Reset Counter
 \----PFSM ---- Transitions for state: Transition on STUN DAMAGE to state Continue Combo
 \----PFSM ---- Transitions for state: Transition on STUN to state Stun
 \----PFSM ---- Actions for state: Actions on In Combo ::: IntAdd
 \----PFSM ---- Actions for state: Actions on In Combo ::: IntAdd
 \----PFSM ---- Actions for state: Actions on In Combo ::: IntCompare
 \----PFSM ---- Actions for state: Actions on In Combo ::: Wait
 \----PFSM ---- IntAdd (Name) = 
 \----PFSM ---- IntAdd (add) = 1
 \----PFSM ---- IntAdd (add?.Name) = 
 \----PFSM ---- IntAdd (everyFrame) = False
 \----PFSM ---- IntAdd (intVariable) = 0
 \----PFSM ---- IntAdd (intVariable?.Name) = Combo Counter
 \----PFSM ---- IntAdd (Name) = 
 \----PFSM ---- IntAdd (add) = 1
 \----PFSM ---- IntAdd (add?.Name) = 
 \----PFSM ---- IntAdd (everyFrame) = False
 \----PFSM ---- IntAdd (intVariable) = 0
 \----PFSM ---- IntAdd (intVariable?.Name) = Hits Total
 \----PFSM ---- IntCompare (Name) = 
 \----PFSM ---- IntCompare (integer1) = 0
 \----PFSM ---- IntCompare (integer2) = 6
 \----PFSM ---- IntCompare (greaterThan) = 
 \----PFSM ---- IntCompare (lessThan) = 
 \----PFSM ---- IntCompare (equal) = STUN
 \----PFSM ---- Wait(String, finishEvent) = TIME OUT
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, Combo Time) = 2
 \----PFSM StateName: Reset Counter
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
 \----PFSM ---- Actions for state: Actions on Reset Counter ::: SetIntValue
 \----PFSM ---- SetIntValue (Name) = 
 \----PFSM ---- SetIntValue (intValue) = 0
 \----PFSM ---- SetIntValue (intValue?.Name) = 
 \----PFSM ---- SetIntValue (intVariable) = 0
 \----PFSM ---- SetIntValue (intVariable?.Name) = Combo Counter
 \----PFSM StateName: Continue Combo
 \----PFSM ---- Transitions for state: Transition on FINISHED to state In Combo
 \----PFSM ---- Transitions for state: Transition on STUN to state Stun
 \----PFSM ---- Actions for state: Actions on Continue Combo ::: IntCompare
 \----PFSM ---- IntCompare (Name) = 
 \----PFSM ---- IntCompare (integer1) = 0
 \----PFSM ---- IntCompare (integer2) = 10
 \----PFSM ---- IntCompare (greaterThan) = STUN
 \----PFSM ---- IntCompare (lessThan) = 
 \----PFSM ---- IntCompare (equal) = STUN
 \----PFSM StateName: Stun
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
 \----PFSM ---- Transitions for state: Transition on MAX to state Stuns Maxed
 \----PFSM ---- Actions for state: Actions on Stun ::: IntCompare
 \----PFSM ---- Actions for state: Actions on Stun ::: IntAdd
 \----PFSM ---- Actions for state: Actions on Stun ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Stun ::: SetIntValue
 \----PFSM ---- Actions for state: Actions on Stun ::: SetIntValue
 \----PFSM ---- IntCompare (Name) = 
 \----PFSM ---- IntCompare (integer1) = 0
 \----PFSM ---- IntCompare (integer2) = 5
 \----PFSM ---- IntCompare (greaterThan) = MAX
 \----PFSM ---- IntCompare (lessThan) = 
 \----PFSM ---- IntCompare (equal) = MAX
 \----PFSM ---- IntAdd (Name) = 
 \----PFSM ---- IntAdd (add) = 1
 \----PFSM ---- IntAdd (add?.Name) = 
 \----PFSM ---- IntAdd (everyFrame) = False
 \----PFSM ---- IntAdd (intVariable) = 0
 \----PFSM ---- IntAdd (intVariable?.Name) = Stuns Total
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = STUN
 \----PFSM ---- SetIntValue (Name) = 
 \----PFSM ---- SetIntValue (intValue) = 0
 \----PFSM ---- SetIntValue (intValue?.Name) = 
 \----PFSM ---- SetIntValue (intVariable) = 0
 \----PFSM ---- SetIntValue (intVariable?.Name) = Combo Counter
 \----PFSM ---- SetIntValue (Name) = 
 \----PFSM ---- SetIntValue (intValue) = 0
 \----PFSM ---- SetIntValue (intValue?.Name) = 
 \----PFSM ---- SetIntValue (intVariable) = 0
 \----PFSM ---- SetIntValue (intVariable?.Name) = Hits Total
 \----PFSM StateName: Max Check
 \----PFSM ---- Transitions for state: Transition on FINISHED to state In Combo
 \----PFSM ---- Transitions for state: Transition on STUN to state Stun
 \----PFSM ---- Actions for state: Actions on Max Check ::: GetTag
 \----PFSM ---- Actions for state: Actions on Max Check ::: IntCompare
 \----PFSM ---- IntCompare (Name) = 
 \----PFSM ---- IntCompare (integer1) = 0
 \----PFSM ---- IntCompare (integer2) = 10
 \----PFSM ---- IntCompare (greaterThan) = STUN
 \----PFSM ---- IntCompare (lessThan) = FINISHED
 \----PFSM ---- IntCompare (equal) = STUN
 \----PFSM StateName: Stuns Maxed
 \----PFSM StateName: Stop
 \----PFSM ---- Transitions for state: Transition on STUN CONTROL START to state Reset Counter
 \----PFSM ---- Transitions for state: Transition on STUN DAMAGE to state Unstun Increment
 \----PFSM StateName: Unstun Increment
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Stop
 \----PFSM ---- Actions for state: Actions on Unstun Increment ::: IntAdd
 \----PFSM ---- IntAdd (Name) = 
 \----PFSM ---- IntAdd (add) = 1
 \----PFSM ---- IntAdd (add?.Name) = 
 \----PFSM ---- IntAdd (everyFrame) = False
 \----PFSM ---- IntAdd (intVariable) = 0
 \----PFSM ---- IntAdd (intVariable?.Name) = Hits Total
 \----PFSM StateName: Reset
 \----PFSM ---- Transitions for state: Transition on STUN CONTROL START to state Reset Counter
 \--PFSM Active: True
 \--PFSM ActiveStateName: Idle
 \--Component: AudioSource
 \--Component: PlayMakerFixedUpdate
 \--Component: AudioSource
 \--Component: DamageHero
 \--Component: ExtraDamageable
 \--Component: HealthManager
 \--Component: EnemyDeathEffectsUninfected
 \--Component: EnemyHitEffectsUninfected
 \--Component: EnemyDreamnailReaction
 \--Component: Recoil
 \--Component: DeactivateIfPlayerdataTrue
Hornet Boss 1\Hit GDash
               \--Component: Transform
               \--GameObject layer: 22
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: PolygonCollider2D
               \--Component: NonBouncer
               \--Component: DamageHero
Hornet Boss 1\Hit ADash
               \--Component: Transform
               \--GameObject layer: 22
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 29.1, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: PolygonCollider2D
               \--Component: NonBouncer
               \--Component: DamageHero
Hornet Boss 1\A Dash Range
               \--Component: Transform
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: PolygonCollider2D
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM StateName: Detect
               \----PFSM ---- Transitions for state: Transition on ENTER to state Enter
               \----PFSM ---- Transitions for state: Transition on EXIT to state Exit
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM StateName: Enter
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Enter ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = A Dash Range
               \----PFSM ---- SetFsmBool (setValue) = True
               \----PFSM StateName: Exit
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Exit ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = A Dash Range
               \----PFSM ---- SetFsmBool (setValue) = False
               \--PFSM Active: True
               \--PFSM ActiveStateName: Detect
               \--Component: PlayMakerUnity2DProxy
Hornet Boss 1\Sphere Ball
               \--Component: Transform
               \--GameObject layer: 22
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: NonBouncer
               \--Component: CircleCollider2D
               \--Component: PlayMakerFSM
               \--PFSM Name: Grow
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Grow
               \----PFSM ---- Actions for state: Actions on Grow ::: SetScale
               \----PFSM ---- Actions for state: Actions on Grow ::: iTweenScaleTo
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = UseOwner
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0.8
               \----PFSM ---- SetScale (y) = 0.8
               \----PFSM ---- SetScale (z) = 0
               \--PFSM Active: False
               \--PFSM ActiveStateName: 
               \--Component: DamageHero
Hornet Boss 1\Sphere Range
               \--Component: Transform
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: CircleCollider2D
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM StateName: Detect
               \----PFSM ---- Transitions for state: Transition on ENTER to state Enter
               \----PFSM ---- Transitions for state: Transition on EXIT to state Exit
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM StateName: Enter
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Enter ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = Sphere Range
               \----PFSM ---- SetFsmBool (setValue) = True
               \----PFSM StateName: Exit
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Exit ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = Sphere Range
               \----PFSM ---- SetFsmBool (setValue) = False
               \--PFSM Active: True
               \--PFSM ActiveStateName: Detect
               \--Component: PlayMakerUnity2DProxy
Hornet Boss 1\Evade Check
               \--Component: Transform
               \--GameObject layer: 14
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM StateName: Detect
               \----PFSM ---- Transitions for state: Transition on ENTER to state Enter
               \----PFSM ---- Transitions for state: Transition on EXIT to state Exit
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM ---- Actions for state: Actions on Detect ::: NextFrameEvent
               \----PFSM ---- Actions for state: Actions on Detect ::: SetIntValue
               \----PFSM ---- Actions for state: Actions on Detect ::: IntAddV2
               \----PFSM ---- Actions for state: Actions on Detect ::: IntCompare
               \----PFSM ---- NextFrameEvent(String, sendEvent) = EXIT
               \----PFSM ---- SetIntValue (Name) = 
               \----PFSM ---- SetIntValue (intValue) = 0
               \----PFSM ---- SetIntValue (intValue?.Name) = 
               \----PFSM ---- SetIntValue (intVariable) = 1
               \----PFSM ---- SetIntValue (intVariable?.Name) = Frames
               \----PFSM ---- IntCompare (Name) = 
               \----PFSM ---- IntCompare (integer1) = 1
               \----PFSM ---- IntCompare (integer2) = 2
               \----PFSM ---- IntCompare (greaterThan) = EXIT
               \----PFSM ---- IntCompare (lessThan) = 
               \----PFSM ---- IntCompare (equal) = EXIT
               \----PFSM StateName: Enter
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Enter ::: SetFsmBool
               \----PFSM ---- Actions for state: Actions on Enter ::: NextFrameEvent
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = Evade Check
               \----PFSM ---- SetFsmBool (setValue) = True
               \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
               \----PFSM StateName: Exit
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Exit ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = Evade Check
               \----PFSM ---- SetFsmBool (setValue) = False
               \--PFSM Active: True
               \--PFSM ActiveStateName: Detect
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (3.5, 1.0)
               \--BoxCollider2D Offset: (1.3, 0.0)
               \--BoxCollider2D Bounds-Min: (16.6, 28.1, 0.0)
               \--BoxCollider2D Bounds-Max: (20.1, 29.1, 0.0)
               \--BoxCollider2D isTrigger: True
               \--Component: PlayMakerFixedUpdate
               \--Component: PlayMakerUnity2DProxy
Hornet Boss 1\Run Away Check
               \--Component: Transform
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM StateName: Detect
               \----PFSM ---- Transitions for state: Transition on ENTER to state Enter
               \----PFSM ---- Transitions for state: Transition on EXIT to state Exit
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM StateName: Enter
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Enter ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = Run Away Check
               \----PFSM ---- SetFsmBool (setValue) = True
               \----PFSM StateName: Exit
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Exit ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = Run Away Check
               \----PFSM ---- SetFsmBool (setValue) = False
               \--PFSM Active: True
               \--PFSM ActiveStateName: Detect
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (9.5, 4.5)
               \--BoxCollider2D Offset: (0.0, 0.9)
               \--BoxCollider2D Bounds-Min: (14.9, 27.3, 0.0)
               \--BoxCollider2D Bounds-Max: (24.4, 31.7, 0.0)
               \--BoxCollider2D isTrigger: True
               \--Component: PlayMakerUnity2DProxy
Hornet Boss 1\Evade Range
               \--Component: Transform
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM StateName: Detect
               \----PFSM ---- Transitions for state: Transition on ENTER to state Enter
               \----PFSM ---- Transitions for state: Transition on EXIT to state Exit
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM StateName: Enter
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Enter ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = Evade Range
               \----PFSM ---- SetFsmBool (setValue) = True
               \----PFSM StateName: Exit
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Exit ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = Evade Range
               \----PFSM ---- SetFsmBool (setValue) = False
               \--PFSM Active: True
               \--PFSM ActiveStateName: Detect
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (7.6, 6.2)
               \--BoxCollider2D Offset: (0.0, 1.8)
               \--BoxCollider2D Bounds-Min: (19.6, 28.6, 0.0)
               \--BoxCollider2D Bounds-Max: (19.6, 28.6, 0.0)
               \--BoxCollider2D isTrigger: True
               \--Component: PlayMakerFSM
               \--PFSM Name: Fluctuate
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Off
               \----PFSM ---- Transitions for state: Transition on FINISHED to state On
               \----PFSM ---- Actions for state: Actions on Off ::: WaitRandom
               \----PFSM ---- Actions for state: Actions on Off ::: SetCollider
               \----PFSM ---- WaitRandom(String, finishEvent) = FINISHED
               \----PFSM ---- WaitRandom(Boolean, realTime) = False
               \----PFSM ---- WaitRandom(FsmFloat, ) = 2
               \----PFSM ---- WaitRandom(FsmFloat, ) = 3
               \----PFSM ---- SetCollider (Name) = 
               \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetCollider (active) = False
               \----PFSM StateName: On
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Off
               \----PFSM ---- Transitions for state: Transition on EVADED to state Off
               \----PFSM ---- Actions for state: Actions on On ::: WaitRandom
               \----PFSM ---- Actions for state: Actions on On ::: SetCollider
               \----PFSM ---- WaitRandom(String, finishEvent) = FINISHED
               \----PFSM ---- WaitRandom(Boolean, realTime) = False
               \----PFSM ---- WaitRandom(FsmFloat, ) = 1
               \----PFSM ---- WaitRandom(FsmFloat, ) = 2
               \----PFSM ---- SetCollider (Name) = 
               \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetCollider (active) = True
               \--PFSM Active: True
               \--PFSM ActiveStateName: Off
               \--Component: PlayMakerUnity2DProxy
Hornet Boss 1\A Dash Effect
               \--Component: Transform
               \--GameObject layer: 11
               \--GameObject tag: Untagged
               \--Transform Position: (16.6, 28.8, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Wait
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Reparent?
               \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dPlayFrame
               \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dWatchAnimationEvents
               \----PFSM StateName: Destroy
               \----PFSM ---- Actions for state: Actions on Destroy ::: ActivateGameObject
               \----PFSM ---- ActivateGameObject (Name) = 
               \----PFSM ---- ActivateGameObject (GameObject) = None
               \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
               \----PFSM ---- ActivateGameObject (activate) = False
               \----PFSM StateName: Reposition?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Set Rotation?
               \----PFSM ---- Actions for state: Actions on Reposition? ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on Reposition? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Reposition? ::: SetPosition
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
               \----PFSM ---- SetMeshRenderer (active) = True
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reposition
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetPosition (Name) = 
               \----PFSM ---- SetPosition (GameObject) = None
               \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetPosition (vector) = (3.0, 0.3, 0.0)
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Pause?
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM ---- Actions for state: Actions on Init ::: ActivateAllChildren
               \----PFSM StateName: Unparent?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait
               \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetParent
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- GetScale(Boolean, everyFrame) = False
               \----PFSM ---- GetScale(FsmGameObject, Self) = None
               \----PFSM ---- GetScale(Space, space) = Self
               \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetScale(FsmFloat, X Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, Y Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, ) = 0
               \----PFSM ---- GetScale(Boolean, everyFrame) = False
               \----PFSM ---- GetScale(FsmGameObject, Self) = None
               \----PFSM ---- GetScale(Space, space) = World
               \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetScale(FsmFloat, World X Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, World Y Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, ) = 0
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = False
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Scale
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = UseOwner
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM StateName: Reparent?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Destroy
               \----PFSM ---- Actions for state: Actions on Reparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Reparent? ::: SetParent
               \----PFSM ---- Actions for state: Actions on Reparent? ::: SetScale
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM StateName: Pause?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Reposition?
               \----PFSM ---- Actions for state: Actions on Pause? ::: FloatCompare
               \----PFSM ---- Actions for state: Actions on Pause? ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on Pause? ::: Wait
               \----PFSM ---- FloatCompare (Name) = 
               \----PFSM ---- FloatCompare (float1) = 0
               \----PFSM ---- FloatCompare (float2) = 0
               \----PFSM ---- FloatCompare (greaterThan) = 
               \----PFSM ---- FloatCompare (lessThan) = FINISHED
               \----PFSM ---- FloatCompare (equal) = FINISHED
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
               \----PFSM ---- SetMeshRenderer (active) = False
               \----PFSM ---- Wait(String, finishEvent) = FINISHED
               \----PFSM ---- Wait(Boolean, realTime) = False
               \----PFSM ---- Wait(FsmFloat, Pause) = 0
               \----PFSM StateName: Set Rotation?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Unparent?
               \----PFSM ---- Actions for state: Actions on Set Rotation? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Set Rotation? ::: SetRotation
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Rotation
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = None
               \----PFSM ---- SetRotation (OwnerOption) = UseOwner
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = Self
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \--PFSM Active: False
               \--PFSM ActiveStateName: 
Hornet Boss 1\Dust HardLand
               \--Component: Transform
               \--GameObject layer: 0
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 27.1, 0.0)
               \--Transform Rotation: (270.8, 0.0, 0.0)
               \--Transform LocalScale: (-1.0, 0.0, 1.0)
               \--Component: ParticleSystem
               \--Component: ParticleSystemRenderer
               \--Component: SetParticleScale
Hornet Boss 1\G Dash Effect
               \--Component: Transform
               \--GameObject layer: 11
               \--GameObject tag: Untagged
               \--Transform Position: (12.9, 29.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Wait
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Reparent?
               \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dPlayFrame
               \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dWatchAnimationEvents
               \----PFSM StateName: Destroy
               \----PFSM ---- Actions for state: Actions on Destroy ::: ActivateGameObject
               \----PFSM ---- ActivateGameObject (Name) = 
               \----PFSM ---- ActivateGameObject (GameObject) = None
               \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
               \----PFSM ---- ActivateGameObject (activate) = False
               \----PFSM StateName: Reposition?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Set Rotation?
               \----PFSM ---- Actions for state: Actions on Reposition? ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on Reposition? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Reposition? ::: SetPosition
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
               \----PFSM ---- SetMeshRenderer (active) = True
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reposition
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetPosition (Name) = 
               \----PFSM ---- SetPosition (GameObject) = None
               \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetPosition (vector) = (6.7, 1.0, 0.0)
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Pause?
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM ---- Actions for state: Actions on Init ::: ActivateAllChildren
               \----PFSM StateName: Unparent?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait
               \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetParent
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- GetScale(Boolean, everyFrame) = False
               \----PFSM ---- GetScale(FsmGameObject, Self) = None
               \----PFSM ---- GetScale(Space, space) = Self
               \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetScale(FsmFloat, X Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, Y Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, ) = 0
               \----PFSM ---- GetScale(Boolean, everyFrame) = False
               \----PFSM ---- GetScale(FsmGameObject, Self) = None
               \----PFSM ---- GetScale(Space, space) = World
               \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetScale(FsmFloat, World X Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, World Y Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, ) = 0
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = False
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Scale
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = UseOwner
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM StateName: Reparent?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Destroy
               \----PFSM ---- Actions for state: Actions on Reparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Reparent? ::: SetParent
               \----PFSM ---- Actions for state: Actions on Reparent? ::: SetScale
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM StateName: Pause?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Reposition?
               \----PFSM ---- Actions for state: Actions on Pause? ::: FloatCompare
               \----PFSM ---- Actions for state: Actions on Pause? ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on Pause? ::: Wait
               \----PFSM ---- FloatCompare (Name) = 
               \----PFSM ---- FloatCompare (float1) = 0
               \----PFSM ---- FloatCompare (float2) = 0
               \----PFSM ---- FloatCompare (greaterThan) = 
               \----PFSM ---- FloatCompare (lessThan) = FINISHED
               \----PFSM ---- FloatCompare (equal) = FINISHED
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
               \----PFSM ---- SetMeshRenderer (active) = False
               \----PFSM ---- Wait(String, finishEvent) = FINISHED
               \----PFSM ---- Wait(Boolean, realTime) = False
               \----PFSM ---- Wait(FsmFloat, Pause) = 0
               \----PFSM StateName: Set Rotation?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Unparent?
               \----PFSM ---- Actions for state: Actions on Set Rotation? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Set Rotation? ::: SetRotation
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Rotation
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = None
               \----PFSM ---- SetRotation (OwnerOption) = UseOwner
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = Self
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \--PFSM Active: False
               \--PFSM ActiveStateName: 
Hornet Boss 1\Flash Effect
               \--Component: Transform
               \--GameObject layer: 11
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.3, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.4, 1.1, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Wait
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Reparent?
               \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dPlayFrame
               \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dWatchAnimationEvents
               \----PFSM StateName: Destroy
               \----PFSM ---- Actions for state: Actions on Destroy ::: ActivateGameObject
               \----PFSM ---- ActivateGameObject (Name) = 
               \----PFSM ---- ActivateGameObject (GameObject) = None
               \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
               \----PFSM ---- ActivateGameObject (activate) = False
               \----PFSM StateName: Reposition?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Set Rotation?
               \----PFSM ---- Actions for state: Actions on Reposition? ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on Reposition? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Reposition? ::: SetPosition
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
               \----PFSM ---- SetMeshRenderer (active) = True
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reposition
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetPosition (Name) = 
               \----PFSM ---- SetPosition (GameObject) = None
               \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Pause?
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM ---- Actions for state: Actions on Init ::: ActivateAllChildren
               \----PFSM StateName: Unparent?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait
               \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetParent
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- GetScale(Boolean, everyFrame) = False
               \----PFSM ---- GetScale(FsmGameObject, Self) = None
               \----PFSM ---- GetScale(Space, space) = Self
               \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetScale(FsmFloat, X Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, Y Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, ) = 0
               \----PFSM ---- GetScale(Boolean, everyFrame) = False
               \----PFSM ---- GetScale(FsmGameObject, Self) = None
               \----PFSM ---- GetScale(Space, space) = World
               \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetScale(FsmFloat, World X Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, World Y Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, ) = 0
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = False
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Scale
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = UseOwner
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM StateName: Reparent?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Destroy
               \----PFSM ---- Actions for state: Actions on Reparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Reparent? ::: SetParent
               \----PFSM ---- Actions for state: Actions on Reparent? ::: SetScale
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM StateName: Pause?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Reposition?
               \----PFSM ---- Actions for state: Actions on Pause? ::: FloatCompare
               \----PFSM ---- Actions for state: Actions on Pause? ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on Pause? ::: Wait
               \----PFSM ---- FloatCompare (Name) = 
               \----PFSM ---- FloatCompare (float1) = 0
               \----PFSM ---- FloatCompare (float2) = 0
               \----PFSM ---- FloatCompare (greaterThan) = 
               \----PFSM ---- FloatCompare (lessThan) = FINISHED
               \----PFSM ---- FloatCompare (equal) = FINISHED
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
               \----PFSM ---- SetMeshRenderer (active) = False
               \----PFSM ---- Wait(String, finishEvent) = FINISHED
               \----PFSM ---- Wait(Boolean, realTime) = False
               \----PFSM ---- Wait(FsmFloat, Pause) = 0
               \----PFSM StateName: Set Rotation?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Unparent?
               \----PFSM ---- Actions for state: Actions on Set Rotation? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Set Rotation? ::: SetRotation
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Rotation
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = None
               \----PFSM ---- SetRotation (OwnerOption) = UseOwner
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = Self
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \--PFSM Active: False
               \--PFSM ActiveStateName: 
Hornet Boss 1\Throw Effect
               \--Component: Transform
               \--GameObject layer: 11
               \--GameObject tag: Untagged
               \--Transform Position: (18.3, 28.5, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Wait
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Reparent?
               \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dPlayFrame
               \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dWatchAnimationEvents
               \----PFSM StateName: Destroy
               \----PFSM ---- Actions for state: Actions on Destroy ::: ActivateGameObject
               \----PFSM ---- ActivateGameObject (Name) = 
               \----PFSM ---- ActivateGameObject (GameObject) = None
               \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
               \----PFSM ---- ActivateGameObject (activate) = False
               \----PFSM StateName: Reposition?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Set Rotation?
               \----PFSM ---- Actions for state: Actions on Reposition? ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on Reposition? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Reposition? ::: SetPosition
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
               \----PFSM ---- SetMeshRenderer (active) = True
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reposition
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetPosition (Name) = 
               \----PFSM ---- SetPosition (GameObject) = None
               \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetPosition (vector) = (1.3, -0.1, 0.0)
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Pause?
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM ---- Actions for state: Actions on Init ::: ActivateAllChildren
               \----PFSM StateName: Unparent?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait
               \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetParent
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
               \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- GetScale(Boolean, everyFrame) = False
               \----PFSM ---- GetScale(FsmGameObject, Self) = None
               \----PFSM ---- GetScale(Space, space) = Self
               \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetScale(FsmFloat, X Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, Y Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, ) = 0
               \----PFSM ---- GetScale(Boolean, everyFrame) = False
               \----PFSM ---- GetScale(FsmGameObject, Self) = None
               \----PFSM ---- GetScale(Space, space) = World
               \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetScale(FsmFloat, World X Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, World Y Scale) = 0
               \----PFSM ---- GetScale(FsmFloat, ) = 0
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = False
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Scale
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = UseOwner
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM StateName: Reparent?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Destroy
               \----PFSM ---- Actions for state: Actions on Reparent? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Reparent? ::: SetParent
               \----PFSM ---- Actions for state: Actions on Reparent? ::: SetScale
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 0
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM StateName: Pause?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Reposition?
               \----PFSM ---- Actions for state: Actions on Pause? ::: FloatCompare
               \----PFSM ---- Actions for state: Actions on Pause? ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on Pause? ::: Wait
               \----PFSM ---- FloatCompare (Name) = 
               \----PFSM ---- FloatCompare (float1) = 0
               \----PFSM ---- FloatCompare (float2) = 0
               \----PFSM ---- FloatCompare (greaterThan) = 
               \----PFSM ---- FloatCompare (lessThan) = FINISHED
               \----PFSM ---- FloatCompare (equal) = FINISHED
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
               \----PFSM ---- SetMeshRenderer (active) = False
               \----PFSM ---- Wait(String, finishEvent) = FINISHED
               \----PFSM ---- Wait(Boolean, realTime) = False
               \----PFSM ---- Wait(FsmFloat, Pause) = 0
               \----PFSM StateName: Set Rotation?
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Unparent?
               \----PFSM ---- Actions for state: Actions on Set Rotation? ::: BoolTest
               \----PFSM ---- Actions for state: Actions on Set Rotation? ::: SetRotation
               \----PFSM ---- BoolTest (Name) = 
               \----PFSM ---- BoolTest (boolVariable) = True
               \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Rotation
               \----PFSM ---- BoolTest (isFalse) = FINISHED
               \----PFSM ---- BoolTest (isTrue) = 
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = None
               \----PFSM ---- SetRotation (OwnerOption) = UseOwner
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = Self
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \--PFSM Active: False
               \--PFSM ActiveStateName: 
Hornet Boss 1\A Sphere Range
               \--Component: Transform
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM StateName: Detect
               \----PFSM ---- Transitions for state: Transition on ENTER to state Enter
               \----PFSM ---- Transitions for state: Transition on EXIT to state Exit
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM StateName: Enter
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Enter ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = A Sphere Range
               \----PFSM ---- SetFsmBool (setValue) = True
               \----PFSM StateName: Exit
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Exit ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = A Sphere Range
               \----PFSM ---- SetFsmBool (setValue) = False
               \--PFSM Active: True
               \--PFSM ActiveStateName: Detect
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (13.1, 35.9)
               \--BoxCollider2D Offset: (0.0, 0.7)
               \--BoxCollider2D Bounds-Min: (13.1, 11.3, 0.0)
               \--BoxCollider2D Bounds-Max: (26.1, 47.2, 0.0)
               \--BoxCollider2D isTrigger: True
               \--Component: PlayMakerUnity2DProxy
Hornet Boss 1\Refight Range
               \--Component: Transform
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (43.8, 3.7)
               \--BoxCollider2D Offset: (-1.1, 0.1)
               \--BoxCollider2D Bounds-Min: (-1.2, 26.8, 0.0)
               \--BoxCollider2D Bounds-Max: (42.6, 30.5, 0.0)
               \--BoxCollider2D isTrigger: True
               \--Component: PlayMakerFSM
               \--PFSM Name: FSM
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Init
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Init ::: GetParent
               \----PFSM StateName: Detect
               \----PFSM ---- Transitions for state: Transition on ENTER to state Enter
               \----PFSM ---- Transitions for state: Transition on EXIT to state Exit
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
               \----PFSM StateName: Enter
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Enter ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = Refight Range
               \----PFSM ---- SetFsmBool (setValue) = True
               \----PFSM StateName: Exit
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Detect
               \----PFSM ---- Actions for state: Actions on Exit ::: SetFsmBool
               \----PFSM ---- SetFsmBool (Name) = 
               \----PFSM ---- SetFsmBool (GameObject) = Hornet Boss 1
               \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetFsmBool (fsmName) = Control
               \----PFSM ---- SetFsmBool (variableName) = Refight Range
               \----PFSM ---- SetFsmBool (setValue) = False
               \--PFSM Active: True
               \--PFSM ActiveStateName: Detect
               \--Component: PlayMakerUnity2DProxy
Hornet Boss 1\Corpse Hornet 1(Clone)
               \--Component: Transform
               \--GameObject layer: 11
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (2.1, 3.4)
               \--BoxCollider2D Offset: (0.0, 0.1)
               \--BoxCollider2D Bounds-Min: (19.6, 28.6, 0.0)
               \--BoxCollider2D Bounds-Max: (19.6, 28.6, 0.0)
               \--BoxCollider2D isTrigger: False
               \--Component: Rigidbody2D
               \--Component: PlayMakerFSM
               \--PFSM Name: Control
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Blow
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Launch
               \----PFSM ---- Actions for state: Actions on Blow ::: TransitionToAudioSnapshot
               \----PFSM ---- Actions for state: Actions on Blow ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Blow ::: AudioPlayerOneShotSingle
               \----PFSM ---- Actions for state: Actions on Blow ::: SendMessage
               \----PFSM ---- Actions for state: Actions on Blow ::: AudioPlaySimple
               \----PFSM ---- Actions for state: Actions on Blow ::: SendEventByName
               \----PFSM ---- Actions for state: Actions on Blow ::: FindGameObject
               \----PFSM ---- Actions for state: Actions on Blow ::: DestroyObject
               \----PFSM ---- Actions for state: Actions on Blow ::: SpawnRandomObjectsV2
               \----PFSM ---- Actions for state: Actions on Blow ::: SpawnRandomObjectsV2
               \----PFSM ---- Actions for state: Actions on Blow ::: CreateObject
               \----PFSM ---- Actions for state: Actions on Blow ::: SendMessage
               \----PFSM ---- Actions for state: Actions on Blow ::: SendEventByName
               \----PFSM ---- TransitionToAudioSnapshot(FsmObject, snapshot? ) = Silent (UnityEngine.AudioMixerSnapshot)
               \----PFSM ---- TransitionToAudioSnapshot(String, snapshot?. type) = FsmObject
               \----PFSM ---- TransitionToAudioSnapshot(String, snapshot?.Name) = 
               \----PFSM ---- TransitionToAudioSnapshot(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Self) = None
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
               \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1
               \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None
               \----PFSM ---- AudioPlaySimple(FsmObject, ) = boss_explode_clean (UnityEngine.AudioClip)
               \----PFSM ---- SendEventByName (Name) = 
               \----PFSM ---- SendEventByName (delay) = 0
               \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
               \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
               \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
               \----PFSM ---- SendEventByName (sendEvent) = HORNET KILLED
               \----PFSM ---- CreateObject (Name) = 
               \----PFSM ---- CreateObject (gameObject?.Name) = 
               \----PFSM ---- CreateObject (position) = (0.0, 0.0, 0.0)
               \----PFSM ---- CreateObject (position) = (0.0, 0.0, 0.0)
               \----PFSM ---- CreateObject (networkGroup) = 0
               \----PFSM ---- CreateObject (networkInstantiate) = False
               \----PFSM ---- CreateObject (spawnPoint) = None
               \----PFSM ---- CreateObject (storeObject) = None
               \----PFSM ---- SendEventByName (Name) = 
               \----PFSM ---- SendEventByName (delay) = 0
               \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
               \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
               \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
               \----PFSM ---- SendEventByName (sendEvent) = AverageShake
               \----PFSM StateName: Launch
               \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
               \----PFSM ---- Actions for state: Actions on Launch ::: FaceObject
               \----PFSM ---- Actions for state: Actions on Launch ::: GetScale
               \----PFSM ---- Actions for state: Actions on Launch ::: FloatMultiply
               \----PFSM ---- Actions for state: Actions on Launch ::: SetVelocity2d
               \----PFSM ---- Actions for state: Actions on Launch ::: NextFrameEvent
               \----PFSM ---- Actions for state: Actions on Launch ::: SetRotation
               \----PFSM ---- FaceObject(FsmGameObject, Self) = None
               \----PFSM ---- FaceObject(FsmGameObject, Hero) = Knight
               \----PFSM ---- FaceObject(FsmString, ) = 
               \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
               \----PFSM ---- FaceObject(Boolean, resetFrame) = False
               \----PFSM ---- FaceObject(FsmBool, ) = False
               \----PFSM ---- GetScale(Boolean, everyFrame) = False
               \----PFSM ---- GetScale(FsmGameObject, ) = None
               \----PFSM ---- GetScale(Space, space) = World
               \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetScale(FsmFloat, X Velocity) = 0
               \----PFSM ---- GetScale(FsmFloat, ) = 0
               \----PFSM ---- GetScale(FsmFloat, ) = 0
               \----PFSM ---- FloatMultiply (Name) = 
               \----PFSM ---- FloatMultiply (floatVariable) = 0
               \----PFSM ---- FloatMultiply (multiplyBy) = 5
               \----PFSM ---- SetVelocity2d (Name) = 
               \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
               \----PFSM ---- SetVelocity2d (x) = 0
               \----PFSM ---- SetVelocity2d (y) = 20
               \----PFSM ---- SetVelocity2d (everyFrame) = False
               \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = None
               \----PFSM ---- SetRotation (OwnerOption) = UseOwner
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = World
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \----PFSM StateName: In Air
               \----PFSM ---- Transitions for state: Transition on LAND to state Land
               \----PFSM ---- Actions for state: Actions on In Air ::: CheckCollisionSideEnter
               \----PFSM ---- Actions for state: Actions on In Air ::: CheckCollisionSide
               \----PFSM ---- Actions for state: Actions on In Air ::: SetRotation
               \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
               \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
               \----PFSM ---- CheckCollisionSideEnter(String, bottomHitEvent) = LAND
               \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
               \----PFSM ---- CheckCollisionSideEnter(, leftHitEvent) = 
               \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
               \----PFSM ---- CheckCollisionSideEnter(, rightHitEvent) = 
               \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False
               \----PFSM ---- CheckCollisionSideEnter(, topHitEvent) = 
               \----PFSM ---- CheckCollisionSideEnter(Boolean, otherLayer) = False
               \----PFSM ---- CheckCollisionSideEnter(Int32, otherLayerNumber) = 0
               \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
               \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
               \----PFSM ---- CheckCollisionSide(String, bottomHitEvent) = LAND
               \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
               \----PFSM ---- CheckCollisionSide(, leftHitEvent) = 
               \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
               \----PFSM ---- CheckCollisionSide(, rightHitEvent) = 
               \----PFSM ---- CheckCollisionSide(FsmBool, ) = False
               \----PFSM ---- CheckCollisionSide(, topHitEvent) = 
               \----PFSM ---- CheckCollisionSide(Boolean, otherLayer) = False
               \----PFSM ---- CheckCollisionSide(Int32, otherLayerNumber) = 0
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = None
               \----PFSM ---- SetRotation (OwnerOption) = UseOwner
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = World
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \----PFSM StateName: Land
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Check Pos
               \----PFSM ---- Actions for state: Actions on Land ::: Tk2dPlayAnimation
               \----PFSM ---- Actions for state: Actions on Land ::: SetVelocity2d
               \----PFSM ---- Actions for state: Actions on Land ::: Wait
               \----PFSM ---- Actions for state: Actions on Land ::: SetRotation
               \----PFSM ---- Tk2dPlayAnimation (Name) = 
               \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
               \----PFSM ---- Tk2dPlayAnimation (clipName) = Wounded
               \----PFSM ---- SetVelocity2d (Name) = 
               \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
               \----PFSM ---- SetVelocity2d (x) = 0
               \----PFSM ---- SetVelocity2d (y) = 0
               \----PFSM ---- SetVelocity2d (everyFrame) = False
               \----PFSM ---- Wait(String, finishEvent) = FINISHED
               \----PFSM ---- Wait(Boolean, realTime) = False
               \----PFSM ---- Wait(FsmFloat, ) = 3
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = None
               \----PFSM ---- SetRotation (OwnerOption) = UseOwner
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = World
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \----PFSM StateName: Check Pos
               \----PFSM ---- Transitions for state: Transition on L to state L
               \----PFSM ---- Transitions for state: Transition on R to state R
               \----PFSM ---- Actions for state: Actions on Check Pos ::: GetPosition
               \----PFSM ---- Actions for state: Actions on Check Pos ::: FloatCompare
               \----PFSM ---- GetPosition (Name) = 
               \----PFSM ---- GetPosition (GameObject) = None
               \----PFSM ---- GetPosition (OwnerOption) = UseOwner
               \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- FloatCompare (Name) = 
               \----PFSM ---- FloatCompare (float1) = 0
               \----PFSM ---- FloatCompare (float2) = 27.3
               \----PFSM ---- FloatCompare (greaterThan) = R
               \----PFSM ---- FloatCompare (lessThan) = L
               \----PFSM ---- FloatCompare (equal) = 
               \----PFSM StateName: L
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump
               \----PFSM ---- Actions for state: Actions on L ::: SetScale
               \----PFSM ---- Actions for state: Actions on L ::: SetVector3Value
               \----PFSM ---- Actions for state: Actions on L ::: SetFloatValue
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = UseOwner
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = -1
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM ---- SetFloatValue (Name) = 
               \----PFSM ---- SetFloatValue (floatValue) = 45
               \----PFSM ---- SetFloatValue (floatValue?.Name) = 
               \----PFSM ---- SetFloatValue (floatVariable) = 0
               \----PFSM ---- SetFloatValue (floatVariable?.Name) = Rotation
               \----PFSM StateName: R
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump
               \----PFSM ---- Actions for state: Actions on R ::: SetScale
               \----PFSM ---- Actions for state: Actions on R ::: SetVector3Value
               \----PFSM ---- Actions for state: Actions on R ::: SetFloatValue
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (OwnerOption) = UseOwner
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 1
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (z) = 0
               \----PFSM ---- SetFloatValue (Name) = 
               \----PFSM ---- SetFloatValue (floatValue) = -45
               \----PFSM ---- SetFloatValue (floatValue?.Name) = 
               \----PFSM ---- SetFloatValue (floatVariable) = 0
               \----PFSM ---- SetFloatValue (floatVariable?.Name) = Rotation
               \----PFSM StateName: Jump
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Throw Start
               \----PFSM ---- Actions for state: Actions on Jump ::: Wait
               \----PFSM ---- Actions for state: Actions on Jump ::: AudioPlayerOneShotSingle
               \----PFSM ---- Actions for state: Actions on Jump ::: PlayParticleEmitter
               \----PFSM ---- Actions for state: Actions on Jump ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on Jump ::: ActivateGameObject
               \----PFSM ---- Actions for state: Actions on Jump ::: SetCollider
               \----PFSM ---- Actions for state: Actions on Jump ::: SetIsKinematic2d
               \----PFSM ---- Actions for state: Actions on Jump ::: Tk2dPlayAnimation
               \----PFSM ---- Actions for state: Actions on Jump ::: iTweenMoveBy
               \----PFSM ---- Wait(String, finishEvent) = FINISHED
               \----PFSM ---- Wait(Boolean, realTime) = False
               \----PFSM ---- Wait(FsmFloat, ) = 0.415
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Self) = None
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetMeshRenderer (active) = False
               \----PFSM ---- ActivateGameObject (Name) = 
               \----PFSM ---- ActivateGameObject (GameObject) = Leave Anim
               \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
               \----PFSM ---- ActivateGameObject (activate) = True
               \----PFSM ---- SetCollider (Name) = 
               \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetCollider (active) = False
               \----PFSM ---- SetIsKinematic2d (Name) = 
               \----PFSM ---- SetIsKinematic2d (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetIsKinematic2d (isKinematic) = True
               \----PFSM ---- Tk2dPlayAnimation (Name) = 
               \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
               \----PFSM ---- Tk2dPlayAnimation (clipName) = Jump Full
               \----PFSM StateName: Throw Start
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Throw
               \----PFSM ---- Actions for state: Actions on Throw Start ::: Tk2dPlayAnimationWithEvents
               \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
               \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
               \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Throw Side Start
               \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, Leave Anim) = Leave Anim
               \----PFSM StateName: Throw
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Yank
               \----PFSM ---- Actions for state: Actions on Throw ::: ActivateGameObject
               \----PFSM ---- Actions for state: Actions on Throw ::: Tk2dPlayAnimationWithEvents
               \----PFSM ---- Actions for state: Actions on Throw ::: Tk2dPlayAnimation
               \----PFSM ---- Actions for state: Actions on Throw ::: AudioPlayerOneShotSingle
               \----PFSM ---- ActivateGameObject (Name) = 
               \----PFSM ---- ActivateGameObject (GameObject) = Thread
               \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
               \----PFSM ---- ActivateGameObject (activate) = True
               \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
               \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
               \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Thread 1
               \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, Thread) = Thread
               \----PFSM ---- Tk2dPlayAnimation (Name) = 
               \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
               \----PFSM ---- Tk2dPlayAnimation (clipName) = Throw Side
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
               \----PFSM StateName: Yank
               \----PFSM ---- Transitions for state: Transition on FINISHED to state End
               \----PFSM ---- Actions for state: Actions on Yank ::: Tk2dPlayAnimation
               \----PFSM ---- Actions for state: Actions on Yank ::: AudioPlayerOneShotSingle
               \----PFSM ---- Actions for state: Actions on Yank ::: SetParent
               \----PFSM ---- Actions for state: Actions on Yank ::: Rotate
               \----PFSM ---- Actions for state: Actions on Yank ::: SetParent
               \----PFSM ---- Actions for state: Actions on Yank ::: iTweenMoveBy
               \----PFSM ---- Actions for state: Actions on Yank ::: AudioPlayerOneShotSingle
               \----PFSM ---- Tk2dPlayAnimation (Name) = 
               \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
               \----PFSM ---- Tk2dPlayAnimation (clipName) = Harpoon Side
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Self) = None
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0
               \----PFSM StateName: End
               \----PFSM ---- Transitions for state: Transition on FINISHED to state 
               \----PFSM ---- Actions for state: Actions on End ::: SendEventByName
               \----PFSM ---- Actions for state: Actions on End ::: SetParent
               \----PFSM ---- Actions for state: Actions on End ::: SetRotation
               \----PFSM ---- Actions for state: Actions on End ::: PlayParticleEmitter
               \----PFSM ---- Actions for state: Actions on End ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on End ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on End ::: SendEventByName
               \----PFSM ---- SendEventByName (Name) = 
               \----PFSM ---- SendEventByName (delay) = 0
               \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
               \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
               \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
               \----PFSM ---- SendEventByName (sendEvent) = EnemyKillShake
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = Grass Escape
               \----PFSM ---- SetRotation (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = World
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetMeshRenderer (active) = False
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Leave Anim
               \----PFSM ---- SetMeshRenderer (active) = False
               \----PFSM ---- SendEventByName (Name) = 
               \----PFSM ---- SendEventByName (delay) = 0
               \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
               \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
               \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
               \----PFSM ---- SendEventByName (sendEvent) = HORNET LEAVE
               \----PFSM StateName: Set PD
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Blow
               \----PFSM ---- Actions for state: Actions on Set PD ::: SetPlayerDataBool
               \----PFSM ---- Actions for state: Actions on Set PD ::: CallMethodProper
               \----PFSM ---- Actions for state: Actions on Set PD ::: SendMessage
               \----PFSM StateName: Limit Y
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Set PD
               \----PFSM ---- Actions for state: Actions on Limit Y ::: GetPosition
               \----PFSM ---- Actions for state: Actions on Limit Y ::: FloatClamp
               \----PFSM ---- Actions for state: Actions on Limit Y ::: SetPosition
               \----PFSM ---- GetPosition (Name) = 
               \----PFSM ---- GetPosition (GameObject) = None
               \----PFSM ---- GetPosition (OwnerOption) = UseOwner
               \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetPosition (Name) = 
               \----PFSM ---- SetPosition (GameObject) = None
               \----PFSM ---- SetPosition (OwnerOption) = UseOwner
               \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
               \--PFSM Active: False
               \--PFSM ActiveStateName: 
               \--Component: AudioSource
               \--Component: NonBouncer
               \--Component: PlayMakerFixedUpdate
Hornet Boss 1\Corpse Hornet 1(Clone)\Thread
                                      \--Component: Transform
                                      \--GameObject layer: 13
                                      \--GameObject tag: Untagged
                                      \--Transform Position: (26.0, 34.0, 0.0)
                                      \--Transform Rotation: (0.0, 0.0, 45.0)
                                      \--Transform LocalScale: (2.3, 1.0, 1.0)
                                      \--Component: MeshFilter
                                      \--Component: MeshRenderer
                                      \--Component: tk2dSprite
                                      \--Component: tk2dSpriteAnimator
Hornet Boss 1\Corpse Hornet 1(Clone)\Grass
                                      \--Component: Transform
                                      \--GameObject layer: 11
                                      \--GameObject tag: Untagged
                                      \--Transform Position: (19.6, 27.2, -0.1)
                                      \--Transform Rotation: (0.0, 0.0, 0.0)
                                      \--Transform LocalScale: (1.8, 1.2, 1.0)
                                      \--Component: ParticleSystem
                                      \--Component: ParticleSystemRenderer
                                      \--Component: SetParticleScale
Hornet Boss 1\Corpse Hornet 1(Clone)\Grass Escape
                                      \--Component: Transform
                                      \--GameObject layer: 11
                                      \--GameObject tag: Untagged
                                      \--Transform Position: (19.7, 28.5, -0.1)
                                      \--Transform Rotation: (89.4, 270.0, 0.0)
                                      \--Transform LocalScale: (0.0, 1.0, 1.0)
                                      \--Component: ParticleSystem
                                      \--Component: ParticleSystemRenderer
                                      \--Component: SetParticleScale
Hornet Boss 1\Corpse Hornet 1(Clone)\Start Pt
                                      \--Component: Transform
                                      \--GameObject layer: 16
                                      \--GameObject tag: Untagged
                                      \--Transform Position: (19.6, 28.6, 0.0)
                                      \--Transform Rotation: (0.0, 0.0, 135.0)
                                      \--Transform LocalScale: (1.0, 1.0, 1.0)
                                      \--Component: ParticleSystem
                                      \--Component: ParticleSystemRenderer
                                      \--Component: ParticleSystemAutoDestroy
Hornet Boss 1\Corpse Hornet 1(Clone)\Leave Anim
                                      \--Component: Transform
                                      \--GameObject layer: 11
                                      \--GameObject tag: Untagged
                                      \--Transform Position: (19.6, 28.6, 0.0)
                                      \--Transform Rotation: (0.0, 0.0, 0.0)
                                      \--Transform LocalScale: (1.0, 1.0, 1.0)
                                      \--Component: MeshFilter
                                      \--Component: MeshRenderer
                                      \--Component: tk2dSprite
                                      \--Component: tk2dSpriteAnimator
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Attack Detect
Attack Detect
 \--Component: Transform
 \--GameObject layer: 11
 \--GameObject tag: Untagged
 \--Transform Position: (25.6, 28.6, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: PlayMakerFSM
 \--PFSM Name: Detect
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Detect
 \----PFSM ---- Transitions for state: Transition on NAIL HIT to state Send
 \----PFSM ---- Actions for state: Actions on Detect ::: GetParent
 \----PFSM ---- Actions for state: Actions on Detect ::: SetParent
 \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
 \----PFSM StateName: Send
 \----PFSM ---- Actions for state: Actions on Send ::: SendEventByName
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Parent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = ATTACKED
 \--PFSM Active: True
 \--PFSM ActiveStateName: Detect
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (1.0, 2.4)
 \--BoxCollider2D Offset: (0.0, -0.2)
 \--BoxCollider2D Bounds-Min: (25.1, 27.2, 0.0)
 \--BoxCollider2D Bounds-Max: (26.1, 29.6, 0.0)
 \--BoxCollider2D isTrigger: True
 \--Component: NonBouncer
 \--Component: PlayMakerUnity2DProxy
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Attack Detect
Attack Detect
 \--Component: Transform
 \--GameObject layer: 11
 \--GameObject tag: Untagged
 \--Transform Position: (25.6, 28.6, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: PlayMakerFSM
 \--PFSM Name: Detect
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Detect
 \----PFSM ---- Transitions for state: Transition on NAIL HIT to state Send
 \----PFSM ---- Actions for state: Actions on Detect ::: GetParent
 \----PFSM ---- Actions for state: Actions on Detect ::: SetParent
 \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
 \----PFSM StateName: Send
 \----PFSM ---- Actions for state: Actions on Send ::: SendEventByName
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Parent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = ATTACKED
 \--PFSM Active: True
 \--PFSM ActiveStateName: Detect
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (1.0, 2.4)
 \--BoxCollider2D Offset: (0.0, -0.2)
 \--BoxCollider2D Bounds-Min: (25.1, 27.2, 0.0)
 \--BoxCollider2D Bounds-Max: (26.1, 29.6, 0.0)
 \--BoxCollider2D isTrigger: True
 \--Component: NonBouncer
 \--Component: PlayMakerUnity2DProxy
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Needle Tink
Needle Tink
 \--Component: Transform
 \--GameObject layer: 17
 \--GameObject tag: Untagged
 \--Transform Position: (19.9, 28.6, 0.0)
 \--Transform Rotation: (0.0, 0.0, 180.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: PlayMakerFSM
 \--PFSM Name: Setup and Follow
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Setup
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Deparent
 \----PFSM ---- Actions for state: Actions on Setup ::: GetOwner
 \----PFSM ---- Actions for state: Actions on Setup ::: GetParent
 \----PFSM ---- Actions for state: Actions on Setup ::: GetParent
 \----PFSM ---- Actions for state: Actions on Setup ::: SetParent
 \----PFSM ---- Actions for state: Actions on Setup ::: SetFsmGameObject
 \----PFSM ---- Actions for state: Actions on Setup ::: GetFsmGameObject
 \----PFSM ---- SetFsmGameObject (Name) = 
 \----PFSM ---- SetFsmGameObject (fsmName) = Control
 \----PFSM ---- SetFsmGameObject (gameObject?.GameObject?.Name) = Hornet
 \----PFSM ---- SetFsmGameObject (setValue?.Name) = Self
 \----PFSM ---- SetFsmGameObject (variableName) = Needle Tink
 \----PFSM StateName: Deparent
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Follow
 \----PFSM ---- Actions for state: Actions on Deparent ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Deparent ::: SetParent
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Needle
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM StateName: Follow
 \----PFSM ---- Actions for state: Actions on Follow ::: GetPosition
 \----PFSM ---- Actions for state: Actions on Follow ::: GetRotation
 \----PFSM ---- Actions for state: Actions on Follow ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Follow ::: SetRotation
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = Needle
 \----PFSM ---- GetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- GetPosition (vector) = (19.9, 28.6, 0.0)
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = None
 \----PFSM ---- SetPosition (OwnerOption) = UseOwner
 \----PFSM ---- SetPosition (vector) = (19.9, 28.6, 0.0)
 \----PFSM ---- SetRotation (Name) = 
 \----PFSM ---- SetRotation (GameObject) = None
 \----PFSM ---- SetRotation (OwnerOption) = UseOwner
 \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 180.0)
 \----PFSM ---- SetRotation (everyFrame) = True
 \----PFSM ---- SetRotation (lateUpdate) = False
 \----PFSM ---- SetRotation (space) = World
 \----PFSM ---- SetRotation (xAngle) = 0
 \----PFSM ---- SetRotation (yAngle) = 0
 \----PFSM ---- SetRotation (zAngle) = 0
 \--PFSM Active: True
 \--PFSM ActiveStateName: Follow
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (3.2, 0.3)
 \--BoxCollider2D Offset: (-0.1, 0.0)
 \--BoxCollider2D Bounds-Min: (19.9, 28.6, 0.0)
 \--BoxCollider2D Bounds-Max: (19.9, 28.6, 0.0)
 \--BoxCollider2D isTrigger: True
 \--Component: AudioSource
 \--Component: DeactivateIfPlayerdataTrue
 \--Component: TinkEffect
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Needle
Needle
 \--Component: Transform
 \--GameObject layer: 22
 \--GameObject tag: Untagged
 \--Transform Position: (19.9, 28.6, 0.0)
 \--Transform Rotation: (0.0, 0.0, 180.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: MeshFilter
 \--Component: MeshRenderer
 \--Component: tk2dSprite
 \--Component: tk2dSpriteAnimator
 \--Component: NonBouncer
 \--Component: PolygonCollider2D
 \--Component: PlayMakerFSM
 \--PFSM Name: Control
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Out
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Decel
 \----PFSM ---- Actions for state: Actions on Out ::: Wait
 \----PFSM ---- Actions for state: Actions on Out ::: SetRotation
 \----PFSM ---- Actions for state: Actions on Out ::: FaceAngle
 \----PFSM ---- Actions for state: Actions on Out ::: FaceAngleV2
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.3
 \----PFSM ---- SetRotation (Name) = 
 \----PFSM ---- SetRotation (GameObject) = None
 \----PFSM ---- SetRotation (OwnerOption) = UseOwner
 \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetRotation (everyFrame) = False
 \----PFSM ---- SetRotation (lateUpdate) = False
 \----PFSM ---- SetRotation (space) = World
 \----PFSM ---- SetRotation (xAngle) = 0
 \----PFSM ---- SetRotation (yAngle) = 0
 \----PFSM ---- SetRotation (zAngle) = 0
 \----PFSM StateName: Decel
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Return
 \----PFSM ---- Actions for state: Actions on Decel ::: DecelerateV2
 \----PFSM ---- Actions for state: Actions on Decel ::: GetSpeed2d
 \----PFSM ---- Actions for state: Actions on Decel ::: FloatCompare
 \----PFSM ---- FloatCompare (Name) = 
 \----PFSM ---- FloatCompare (float1) = 0
 \----PFSM ---- FloatCompare (float2) = 0
 \----PFSM ---- FloatCompare (greaterThan) = 
 \----PFSM ---- FloatCompare (lessThan) = FINISHED
 \----PFSM ---- FloatCompare (equal) = FINISHED
 \----PFSM StateName: Init
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Out
 \----PFSM ---- Actions for state: Actions on Init ::: GetParent
 \----PFSM ---- Actions for state: Actions on Init ::: FindChild
 \----PFSM ---- Actions for state: Actions on Init ::: GetPosition
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = None
 \----PFSM ---- GetPosition (OwnerOption) = UseOwner
 \----PFSM ---- GetPosition (vector) = (19.9, 28.6, 0.0)
 \----PFSM StateName: Return
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Notify
 \----PFSM ---- Actions for state: Actions on Return ::: iTweenMoveTo
 \----PFSM ---- Actions for state: Actions on Return ::: DecelerateV2
 \----PFSM ---- Actions for state: Actions on Return ::: ActivateGameObject
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Thread
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM StateName: Notify
 \----PFSM ---- Actions for state: Actions on Notify ::: SendEventByName
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = NEEDLE RETURN
 \----PFSM StateName: Destroy
 \----PFSM ---- Actions for state: Actions on Destroy ::: DestroySelf
 \--PFSM Active: False
 \--PFSM ActiveStateName: 
 \--Component: Rigidbody2D
 \--Component: DamageHero
 \--Component: PlayMakerFixedUpdate
Needle\Thread
        \--Component: Transform
        \--GameObject layer: 22
        \--GameObject tag: Untagged
        \--Transform Position: (14.7, 28.6, 0.0)
        \--Transform Rotation: (0.0, 0.0, 180.0)
        \--Transform LocalScale: (1.0, 1.0, 1.0)
        \--Component: MeshFilter
        \--Component: MeshRenderer
        \--Component: tk2dSprite
        \--Component: tk2dSpriteAnimator
        \--Component: DeactivateAfter2dtkAnimation
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Grass Escape
Grass Escape
 \--Component: Transform
 \--GameObject layer: 11
 \--GameObject tag: Untagged
 \--Transform Position: (15.8, 42.4, -0.1)
 \--Transform Rotation: (41.6, 90.0, 0.0)
 \--Transform LocalScale: (0.0, 1.0, 1.0)
 \--Component: ParticleSystem
 \--Component: ParticleSystemRenderer
 \--Component: SetParticleScale
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
